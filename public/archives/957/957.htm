<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>R4ndom’s Tutorial #16A: Dealing With Windows Messages «  The Legend Of Random</title>
<meta name="generator" content="WordPress 3.5.1">
<meta name="robots" content="follow, all">

<link rel="shortcut icon" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/favicon.ico">
<link rel="stylesheet" href="957_fichiers/style.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="The Legend Of Random RSS Feed" href="http://thelegendofrandom.com/blog/feed">
<link rel="stylesheet" href="957_fichiers/menu.css" type="text/css" media="screen">
<!--[if IE]><link rel="stylesheet" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/css/ie.css" type="text/css" media="screen" /><![endif]-->

<link rel="alternate" type="application/rss+xml" title="The Legend Of Random » R4ndom’s Tutorial #16A: Dealing With Windows Messages Comments Feed" href="http://thelegendofrandom.com/blog/archives/957/feed">
<script type="text/javascript" src="957_fichiers/jquery.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var MyAjax = {"ajaxurl":"http:\/\/thelegendofrandom.com\/blog\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="957_fichiers/ajax.js"></script>
<script type="text/javascript" src="957_fichiers/comment-reply.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://thelegendofrandom.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://thelegendofrandom.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="A New Submission to the Site!" href="http://thelegendofrandom.com/blog/archives/1397">
<link rel="next" title="More Tutorials Uploaded by Members" href="http://thelegendofrandom.com/blog/archives/1469">
<meta name="generator" content="WordPress 3.5.1">
<link rel="canonical" href="http://thelegendofrandom.com/blog/archives/957">
<link rel="shortlink" href="http://thelegendofrandom.com/blog/?p=957">
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css" id="syntaxhighlighteranchor"></style>

<script type="text/javascript" src="957_fichiers/jquery_003.js"></script>
<script type="text/javascript" src="957_fichiers/jquery_002.js"></script>
<script type="text/javascript" src="957_fichiers/jquery_004.js"></script>
<script type="text/javascript" src="957_fichiers/my-menu.js"></script>

<!-- this product is released under General Public License. Please see the attached file for details. You can also find details about the license at http://www.opensource.org/licenses/gpl-license.php -->
<script type="text/javascript">
/* <![CDATA[ */

jQuery(document).ready(function(){ 
    jQuery(document).pngFix(); 
});

/* ]]> */ 
</script>

</head>

<body>

<div id="wrapper" align="center">
	<div id="layouttop"></div>
    
    <!-- Header Starts -->
    <div id="header">
    	<div id="headerleft">
        	              	<h1><a href="http://thelegendofrandom.com/blog">The Legend Of Random</a> </h1><h3>Programming and Reverse Engineering</h3>
			      	   
        </div>
        <div id="headerright">
        	<div id="searchboxo">
        		<form method="get" id="searchform" action="http://thelegendofrandom.com/blog/">
    <input value="Search keywords" name="s" id="searchbox" onfocus="this.value=''" class="searchinput" type="text">
    <input class="submitbutton" value="" type="submit">
</form> 
            </div>
        </div>
    </div>
    <!-- Header Ends -->

    
    
    <div id="innerwrapper">
    	
        <!-- Main nav Starts here -->
        <div id="navouter">
            <div id="nav">

                                <ul class="lavalamp" id="menu1">
                <li class="page_item "><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/index.html">Home</a> </li>
                <li class="page_item page-item-2"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/sample-page.html">Tutorials</a> </li>
<li class="page_item page-item-27"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/tools.html">Tools</a> </li>
<li class="page_item page-item-153"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/contact-2.html">Contact</a> </li>
<li class="page_item page-item-846"><a href="http://www.thelegendofrandom.com/forum/">Forum</a> </li>
<li class="page_item page-item-1790"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/challenges.html">Challenges</a> </li>			
               
			   <li style="left: 12px; width: 58px;" class="back"><div class="left"></div></li></ul>
            
            </div>
        </div>
        <!-- Main nav Ends -->
<div id="maincol">
		
        <div class="postwrap">
          	<h2 class="posttitle"><a href="http://thelegendofrandom.com/blog/archives/957">R4ndom’s Tutorial #16A: Dealing With Windows Messages</a> </h2>
          	<div class="postmeta">by <a href="http://thelegendofrandom.com/blog/archives/author/random" title="Posts by R4ndom" rel="author">R4ndom</a>  on Jul.30, 2012, under <a href="http://thelegendofrandom.com/blog/archives/category/beginner" title="View all posts in Beginner" rel="category tag">Beginner</a> , <a href="http://thelegendofrandom.com/blog/archives/category/reverse-engineering" title="View all posts in Reverse Engineering" rel="category tag">Reverse Engineering</a> , <a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts in Tutorials" rel="category tag">Tutorials</a> </div>
            <div class="clr16"></div>
          	<div class="postcontent"><p>Well, after overcoming two 
viruses (one for me and one for my computer) I finally have the latest 
tutorial up. This tutorial will be part of a three part tutorial, all 
dealing with the same crackme ( a pretty hard one) called Crackme12 by 
Detten. In the first part we will go over how Windows messaging works. 
The second part will be about self-modifying code. In this part we will 
also crack the app. In the third and final part we will introduce 
bruteforcing. And you guessed it, in the third part we will bruteforce 
this binary. Each part will continue where the previous left off.</p>
<p>This three part series will be challenging, but I guarantee you that 
if you take your time and experiment on your own, you will gain critical
 knowledge in reverse engineering. And remember, if you have any 
questions, feel free to ask in the <span style="text-decoration: underline;"><span style="color: #0a77e1;"><a title="Forum" href="http://www.thelegendofrandom.com/forum/"><span style="color: #0a77e1; text-decoration: underline;">forum</span></a> </span></span></p>.
 I will also give homework at the end of each tutorial that will help 
you prepare for the next one. This is where the real learning will come 
in <img src="957_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> .<p></p>
<p>As always, the files you need will be available in the download of this tutorial on the <span style="text-decoration: underline; color: #0a77e1;"><a title="Tutorials" href="http://thelegendofrandom.com/blog/sample-page"><span style="color: #0a77e1; text-decoration: underline;">tutorials</span></a> </span></p> page. For the first part, the files include the crackme and a cheat sheet for Windows messaging.<p></p>
<p>So, without further ado, let’s begin…</p>
<p><span id="more-957"></span></p>
<h2><span style="color: #0a77e1;">Introduction to Windows Messaging<br>
</span></h2>
<p>In this tutorial we will talk about Windows messages and the 
procedures that handle them. In almost all programs, with the exception 
of apps written in Visual Basic *sigh* , .NET, or Java, tasks are 
accomplished through the use of a message driven callback procedure. 
What this means is that, unlike in the old DOS days of programming, in 
Windows you simply set up the window, providing the various settings, 
bitmaps, menu items etc you want displayed, and then you provide a loop 
that runs until the program ends. This loop’s sole responsibility is to 
receive a ‘message’ from Windows and send it to our app’s callback 
function. These messages can be anything, from moving a mouse, to 
clicking a button, to hitting the ‘X’ to close an app. When we make a 
Windows app, we provide this endless loop in our WinMain procedure, 
along with an address to call whenever a message comes in. This address 
is our callback. This loop then sends the messages it receives to our 
callback function with the address we provided, and in this callback we 
decide whether we want to do anything with this particular message, or 
simply let Windows handle it.</p>
<p>For example. we may display a simple message box with a warning in it
 and an OK button. All we care about is the message that says OK was 
clicked. We don’t care if the user moved the window (a WM_MOVE message),
 or clicks in our window outside the OK button (a WM_MOUSEBUTTONDOWN 
message). But when the message come thru that the OK button was clicked,
 that’s when we may want to do something. All of the messages we don’t 
want to handle, Windows handles for us. The messages we do wish to 
handle, we simply override Windows and do something with it.</p>
<p>The main procedure that sets up the windows and contains the loop is 
called WinMain and the callback is generally called WndProc if it’s a 
window, or DlgProc if it’s a dialog box, though the names can be 
anything.</p>
<p>I have included in the download a guide to all Windows messages that 
you should have open during the tutorial. You can download all of the 
support files on the <a title="Tutorials" href="http://thelegendofrandom.com/blog/sample-page"><span style="text-decoration: underline; color: #0a77e1;">tutorials</span></a> </p> page. You can also download the windows messages cheat sheet on the <span style="text-decoration: underline; color: #0a77e1;"><a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="color: #0a77e1; text-decoration: underline;">tools</span></a> </span> page.<p></p>
<p><!--more--></p>
<p>&nbsp;</p>
<h2><span style="color: #0a77e1;">Loading the App</span></h2>
<p>Go ahead and load Crackme12.exe into Olly and let’s have a look around:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/130.png"><img class="aligncenter size-full wp-image-1307" title="Load the app" src="957_fichiers/130.png" alt="" height="148" width="661"></a> </p><p></p>
<p>This is what a standard app, written in C or C++ looks like when using a dialog box as the main program window.</p>
<p><em>*** If the program used a regular window instead of a dialog box, it would look different. see below.***</em></p>
<p>Notice the arguments being pushed onto the stack and the call to 
DialogBoxParamA. This sets up a dialog box to be used as the program’s 
main window (as opposed to a normal window, but don’t get bogged down in
 the details- it really doesn’t matter). Getting help on DialogBoxParamA
 we see:</p>
<p style="text-align: center;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/226.png"><img class="aligncenter  wp-image-1308" title="Help on DialogBoxParamA" src="957_fichiers/226.png" alt="" height="574" width="602"></a> </p><p></p>
<p>For our purposes, the most important thing in this call is the 
address of DLGPROC. This is the address for the callback in our app that
 will handle all of the Windows messages. Looking back at the 
disassembly, we can clearly see this address:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/319.png"><img class="aligncenter size-full wp-image-1309" title="The dlgproc address" src="957_fichiers/319.png" alt="" height="122" width="700"></a> </p><p></p>
<p>In this case, it’s 40102B. Let’s head there and see what it looks like. This will be the…</p>
<p>&nbsp;</p>
<h2><span style="color: #0a77e1;">Main Dialog Callback Message Handler</span></h2>
<p>Here we can we the beginning of it:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/419.png"><img class="aligncenter  wp-image-1310" title="The dlgproc" src="957_fichiers/419.png" alt="" height="722" width="615"></a> </p><p></p>
<p>This is a fairly normal looking DlgProc. It is usually just a really 
big switch statement, though in assembly, it turns into a really big 
if/then statement. If you read through my last tutorial, this should 
look somewhat familiar, the only difference being that in this case, 
Olly could not figure out the case labels (ie. Case 113 (WM_TIMER)).</p>
<p>This procedure is here for one reason- to respond to the Windows 
messages that we wish to respond to. If you look closely, you will see a
 bunch of compare and jump statements. This is checking each section of 
code against the message ID that Windows has sent in. If the code&nbsp; 
matches one of these compare statements, that code is run. Otherwise, it
 will flow through all the compares, none will match, and it will be 
sent on to Windows for Windows to handle.</p>
<p>Let’s view this process a little closer. Go ahead and run the app:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/18.png"><img class="aligncenter size-full wp-image-958" title="Running the app" src="957_fichiers/18.png" alt="" height="228" width="338"></a> </p><p></p>
<p>A very strange crackme, to say the least. Go ahead and play around 
with it. You will notice that you can continue to hit buttons and 
nothing happens, though it does have a ‘clear’ button. It seems that it 
wishes us to put in a specific code, and unless we do, the app will do 
nothing.</p>
<p>Let’s now put a BP on the beginning of the DlgProc code at address 
40102B and re-start the app so we can watch the messages come in:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/61.png"><img class="aligncenter size-full wp-image-964" title="Placing a BP" src="957_fichiers/61.png" alt="" height="226" width="637"></a> </p><p></p>
<p>As soon as you start the app, we will immediately break at our BP. 
You will notice that a couple instructions in we start our first compare</p>
<p>40102E&nbsp; CMP [ARG.2], 110</p>
<p>If you look up ID 110 in the list of Windows messages included in the
 download of this tutorial, you will see that 110 is the code for 
InitDialog:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/71.png"><img class="aligncenter size-full wp-image-966" title="INITDIALOG message" src="957_fichiers/71.png" alt="" height="114" width="493"></a> </p><p></p>
<p>This message gives our app a chance to initialize some things. If you
 step through and the message is INITDIALOG, we will fall through and 
perform the instructions beginning at 401037.</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/91.png"><img class="aligncenter size-full wp-image-967" title="Looking at Init Dialog" src="957_fichiers/91.png" alt="" height="159" width="697"></a> </p><br>
Looking down at the info area we can see that ARG.2 is not 110 but 30:<p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/81.png"><img class="aligncenter size-full wp-image-965" title="SETFONT message" src="957_fichiers/81.png" alt="" height="117" width="347"></a> </p><p></p>
<p>In our chart, 30 is the message for set font. So this is the first message Windows is sending through.</p>
<p>The next compare is with 10, which in our message cheat sheet is WM_CLOSE:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/101.png"><img class="aligncenter size-full wp-image-968" title="Comparing with close" src="957_fichiers/101.png" alt="" height="157" width="658"></a> </p><p></p>
<p>So when the close button is clicked, this code will be run. The next compare is 111 which is WM_COMMAND:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/111.png"><img class="aligncenter size-full wp-image-969" title="WM_COMMAND" src="957_fichiers/111.png" alt="" height="334" width="519"></a> </p><p></p>
<p>WM_COMMAND is a catchall for several Windows message types, usually 
connected to resources, for example a button click or selecting a menu, 
or clicking a toolbar icon. In addition to a WM_COMMAND message, a 
second integer is sent in the ARG.3 holder that helps clarify the 
command message. For example, if you clicked on a button, a WM_COMMAND 
message would come through and ARG.3 might have the button’s ID in it. 
If you were drawing in a freehand draw program, ARG.3 may have the X and
 Y coordinates of where the mouse is currently:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/121.png"><img class="aligncenter size-full wp-image-970" title="Jumping to the end" src="957_fichiers/121.png" alt="" height="348" width="418"></a> </p><p></p>
<p>Looking at this carefully, we can see that WM_COMMAND is the only 
other message (or really, collection of messages as each WM_COMMAND can 
be a different ‘type’) that this procedure handles. If you single step 
through you will notice that no code is run for our current message, 
WM_SETFONT, and we simply return at the end of our procedure. This tells
 Windows that we wish Windows to handle this message, not us:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/131.png"><img class="aligncenter size-full wp-image-971" title="Returning" src="957_fichiers/131.png" alt="" height="99" width="455"></a> </p><p></p>
<p>Hitting RUN again we will break on the next message:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/141.png"><img class="aligncenter size-full wp-image-972" title="First COMMAND comes thru" src="957_fichiers/141.png" alt="" height="317" width="474"></a> </p><p></p>
<p>This time we see that it is a WM_COMMAND message. Stepping down to 
the compare that checks for this message at address 401081, we can then 
take a closer look at the WM_COMMAND handler:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/151.png"><img class="aligncenter size-full wp-image-973" title="Bypass the jump to end" src="957_fichiers/151.png" alt="" height="312" width="463"></a> </p><p></p>
<p>Notice it moves ARG.3 into EAX and EDX. It then performs a SHR (shift
 Right) on the EDX register in the amount of 10 (or 16 decimal). It then
 OR’s this value, and if it’s not a zero, we jump. Basically this is 
checking if the fifth bit of this argument is a zero or not (you are 
reading that assembly book, right?). This is because&nbsp; the upper 
bits of EDX tells us the ID of the resource that has been affected. In 
this case, it is a zero, so we will jump over the remaining code and 
return from our callback:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/161.png"><img class="aligncenter size-full wp-image-974" title="Not dealing wioth this message" src="957_fichiers/161.png" alt="" height="145" width="466"></a> </p><p></p>
<p>Here we can see we are dealing with a 111, or WM_COMMAND message:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/171.png"><img class="aligncenter size-full wp-image-975" title="COMMAND again" src="957_fichiers/171.png" alt="" height="112" width="284"></a> </p><p></p>
<p>and here we can see the jump:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/181.png"><img class="aligncenter size-full wp-image-976" title="Not dealing again" src="957_fichiers/181.png" alt="" height="319" width="458"></a> </p><p></p>
<p>Running the app again, we again stop at our BP. This time we can see that we are dealing with a WM_INITDIALOG message:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/19.png"><img class="aligncenter size-full wp-image-977" title="INITDIALOG comes thru" src="957_fichiers/19.png" alt="" height="108" width="243"></a> </p><p></p>
<p>So we are going to run the couple of lines at the top that are part of the initialization of this dialog:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/20.png"><img class="aligncenter size-full wp-image-978" title="Run the init code" src="957_fichiers/20.png" alt="" height="103" width="672"></a> </p><p></p>
<p>In this particular crackme, this code happens to be important. We see
 that several integers are stored into memory starting at 403038 (they 
are accessed out of order and 403038 is the lowest). Let’s first bring 
that up in the dump window:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/211.png"><img class="aligncenter size-full wp-image-979" title="Setup the dump window" src="957_fichiers/211.png" alt="" height="176" width="449"></a> </p><p></p>
<p>and see it is initialized to zeroes before we run these lines. Now 
step over the first MOV instruction and you won’t see anything happen, 
but a zero is copied into address 403048. Stepping over the next 
instruction we can see the effects though:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/22.png"><img class="aligncenter size-full wp-image-980" title="Writing to the dump" src="957_fichiers/22.png" alt="" height="54" width="454"></a> </p><p></p>
<p>and here we can see that 0xDEAD was copied into memory (in little endian order):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/23.png"><img class="aligncenter size-full wp-image-981" title="The second write" src="957_fichiers/23.png" alt="" height="92" width="252"></a> </p><p></p>
<p>stepping over the next line does the same thing, but at address 40303C:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/24.png"><img class="aligncenter size-full wp-image-982" title="The third write" src="957_fichiers/24.png" alt="" height="103" width="267"></a> </p><p></p>
<p>The fact that they are words written in hex is a dead giveaway that it is important to this crackme <img src="957_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> . Next, the value 42 is copied 4 times at address 403040. We can see the ASCII equivalent of “B” in the ASCII dump area:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/25.png"><img class="aligncenter size-full wp-image-983" title="The fourth write" src="957_fichiers/25.png" alt="" height="125" width="454"></a> </p><p></p>
<p>Lastly, the integer 403000 is copied into address 40304C, which Olly 
can tell is a pointer to code or data beginning at 403000 (remember 
little endian):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/26.png"><img class="aligncenter size-full wp-image-984" title="The last write" src="957_fichiers/26.png" alt="" height="98" width="447"></a> </p><p></p>
<p>Finally, we jump to the end and return, waiting for the next message sent through:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/27.png"><img class="aligncenter size-full wp-image-985" title="We're done with INIT" src="957_fichiers/27.png" alt="" height="275" width="452"></a> </p><p></p>
<p>Clicking F9 a couple more times (10) you will see the main dialog window get created:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/28-after-11-F9s.png"><img class="aligncenter size-full wp-image-986" title="After 11 runs, we see the window" src="957_fichiers/28-after-11-F9s.png" alt="" height="228" width="338"></a> </p><p></p>
<p>It gets very interesting at this point because as you hit F9, each 
time something new appears in the dialog box (after about 6 runs), as a 
message is received to draw that resource onto the screen. The next 
message is 135, or WM_CTLCOLORBUTTON:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/29-after-7-F9s.png"><img class="aligncenter size-full wp-image-987" title="After 7 more runs, we see the first button" src="957_fichiers/29-after-7-F9s.png" alt="" height="120" width="329"></a> </p><p></p>
<p>which draws a button on the window:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/30.png"><img class="aligncenter size-full wp-image-988" title="First button drawn" src="957_fichiers/30.png" alt="" height="228" width="338"></a> </p><p></p>
<p>and next is the button with the ’2′ in it:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/311.png"><img class="aligncenter size-full wp-image-989" title="Second button drawn" src="957_fichiers/311.png" alt="" height="228" width="338"></a> </p><p></p>
<p>At this point, clicking F9, you will actually see the dialog box get 
built, one button at a time. It’s interesting to see all the messages 
come in and look them up in our chart. You will see that there are a lot
 of messages that come through. If you don’t know one, just Google it 
and you can get a description of it. Toward the end, the label will be 
drawn at the bottom, and the “No access” text will be written to it. 
This will complete the window. I had to click F9 about 35 times before 
the window was complete:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/32.png"><img class="aligncenter size-full wp-image-990" title="Entire window drawn" src="957_fichiers/32.png" alt="" height="228" width="338"></a> </p><p></p>
<p>So now you can see how a dialog box gets built. You set up the basics
 of the box, the title and the overall look, and you pass in a pointer 
(address) to a callback function that will handle all messages sent from
 Windows. Windows will then send a collection of messages, one at a 
time, to this callback, giving us the chance to run code at each message
 if we so desire. After the box has been completely built, Windows 
enters an inside loop that just sits there and waits for us to do 
something. As soon as we do, a message is sent to our callback with the 
appropriate ID of the action that has taken place. We can then decide to
 act on this message or ignore it and let Windows handle it.</p>
<p>One final thing you will notice is that, if the app is running in 
Olly, just moving the mouse over the window will cause Olly to pause at 
the beginning of the message handler with a new message. Windows is 
telling our handler that the mouse was moved over it. Basically, 
anything you do to that dialog box will send a message to our handler.</p>
<p>&nbsp;</p>
<h2><span style="color: #0a77e1;">Homework</span></h2>
<p>1. See if you can figure out what happens after clicking a button, 
especially to the memory contents starting at address 403038. Do the 
different buttons do different things? Can you begin to understand the 
code that is modifying these memory locations?</p>
<p>2. Take a guess on how long the password is.</p>
<p>&nbsp;</p>
<p>-till next time</p>
<p>R4ndom</p>
<p>&nbsp;</p>
</div>
          	<div class="clr"></div>
          	<span class="linkpages"></span><div class="cleared"></div>
          	
			            
				<div class="roundcornrrbox">
                   	<div class="topleftcorner"><div class="toprightcorner"></div></div>
                    <div class="roubcornrcontent">
            			<span class="posttags-single">No tags</span>
                    	<div class="clr"></div>
                    </div>
                    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
                </div>                        
                        
			
			        	
            <div class="clr"></div>
        </div> <!-- Closes topPost -->
		<small></small>

		<div id="comments">
			            <!-- WP 2.7 and above -->
            <div class="roundcornrrbox">
	<div class="topleftcorner"><div class="toprightcorner"></div></div>
	<div class="roubcornrcontent">

		<h3 id="commentstitle">11 Comments for this entry</h3>
	<ul class="commentlist">
		   <li class="comment even thread-even depth-1" id="li-comment-1988">
     <div id="comment-1988">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>them123</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1988" title="">July 30th, 2012 on 7:24 pm</a>  </small>

			<p>My olly did not show “ARG.2″ for example, and I found that I had 
to change the option under Options -&gt; Debugging Options -&gt; 
Analysis 1 -&gt; “Show Args and Locals in procedures”</p>
<p>Hopefully this will help someone!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=1988#respond" onclick='return addComment.moveForm("comment-1988", "1988", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment byuser comment-author-random bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-1995">
     <div id="comment-1995">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="957_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1995" title="">July 30th, 2012 on 9:32 pm</a>  </small>

			<p>Yes, if the .ini file was changed, sometimes this can happen. Thank you for listing the solution.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=1995#respond" onclick='return addComment.moveForm("comment-1995", "1995", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2014">
     <div id="comment-2014">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>fishingmaster</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2014" title="">July 31st, 2012 on 10:18 am</a>  </small>

			<p>i guess it must be of 10 chars<br>
i would guess something like 79DE624C4B<br>
but it is only a guess.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=2014#respond" onclick='return addComment.moveForm("comment-2014", "2014", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2015">
     <div id="comment-2015">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/6e6e31f4130a75619e8abaa9a28fd56d.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://tpodt.net16.net/" rel="external nofollow" class="url">Mr. eXoDia</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2015" title="">July 31st, 2012 on 11:55 am</a>  </small>

			<p>Nice one, waiting for the next tut <img src="957_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p>Greetings</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=2015#respond" onclick='return addComment.moveForm("comment-2015", "2015", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-3852">
     <div id="comment-3852">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Modnar</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-3852" title="">September 6th, 2012 on 12:57 pm</a>  </small>

			<p>Hi I read this tutorial and I got some questions if you don’t mind, I guess my ASM is a bit rusty:</p>
<p>1- At the part where it shifts right 16 times, and then OR’s itself, I
 didn’t understand how by doing this it is checking the 5th bit? and why
 does it want to check that bit? The ID thing is not clear.</p>
<p>2- How come DEAD was stored in little endian (AD DE) but not 
42424242? is it because 42424242 = DWORD therefor it does not do the 
packing?</p>
<p>Sorry again I know this site is not about ASM, but I’ve re-reading 
the book and tried Google, it just did not click. So this is my last 
hope.</p>
<p>3- I am really considering learning WinAPI, do you recommend Charles Petzold’s book for today or is it outdated?</p>
<p>Thanks!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=3852#respond" onclick='return addComment.moveForm("comment-3852", "3852", "respond", "957")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-3855">
     <div id="comment-3855">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="957_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-3855" title="">September 6th, 2012 on 3:35 pm</a>  </small>

			<p>Will have to look up #1…<br>
#2: 42424242 in little endian order is 42424242- It’s the same in little endian as big endian.</p>
<p>#3: I would recommend Petzold’s book. It actually is not dated, 
except for references to Windows 98. Everything in it works for Windows 
7.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=3855#respond" onclick='return addComment.moveForm("comment-3855", "3855", "respond", "957")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment even depth-3" id="li-comment-3856">
     <div id="comment-3856">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Modnar</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-3856" title="">September 6th, 2012 on 4:10 pm</a>  </small>

			<p>You’re right I guess tiredness really got me, can’t believe how I asked #2 I feel so ashamed. <img src="957_fichiers/icon_sad.gif" alt=":(" class="wp-smiley"><br>
Awaiting #1, I will read Petzold’s sometime.</p>
<p>Thanks!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=3856#respond" onclick='return addComment.moveForm("comment-3856", "3856", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
</ul>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-13609">
     <div id="comment-13609">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Anonymous</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-13609" title="">January 24th, 2013 on 6:30 pm</a>  </small>

			<p>“Basically this is checking if the fifth bit of this argument is a zero”</p>
<p>It’s checking the 16th bit if it’s right-shifting 16 times. I think 
you got confused by the fact it’s contained in the 5th hex digit.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=13609#respond" onclick='return addComment.moveForm("comment-13609", "13609", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-80347">
     <div id="comment-80347">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/d27923c3f6c5b79e15adcbcf584d5775.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>pornpinoy</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-80347" title="">August 10th, 2013 on 8:24 am</a>  </small>

			<p>My homework <img src="957_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"><br>
1)<br>
4012A5, #buttons<br>
401255, #About button<br>
4011c8, #clear<br>
3) 14 is the length? just a guess</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=80347#respond" onclick='return addComment.moveForm("comment-80347", "80347", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-83518">
     <div id="comment-83518">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/75e16bd8fb18bc7b00cf799388c54cd4.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>Ziv</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-83518" title="">September 1st, 2013 on 9:17 pm</a>  </small>

			<p>it seems I can’t actually see the program while it’s running if it
 has stopped on a BP, therefore it’s kinda hard for me to tell when it’s
 fully loaded(when all the buttons have loaded).<br>
any ideas? thanks.<br>
btw, great tutorial. thanks a lot for your effort!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=83518#respond" onclick='return addComment.moveForm("comment-83518", "83518", "respond", "957")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment even depth-2" id="li-comment-84182">
     <div id="comment-84182">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="957_fichiers/0e2853672c5664d0cd3a928e9a1f8209.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="https://play.google.com/store/apps/details?id=com.lyen.tracingpaper" rel="external nofollow" class="url">lyen</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-84182" title="">September 9th, 2013 on 11:15 am</a>  </small>

			<p>Close all windows except OllyDbg’s window, and don’t make your 
OllyDbg’s window full screen. Then you will see the program when it 
stops on a break point.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957?replytocom=84182#respond" onclick='return addComment.moveForm("comment-84182", "84182", "respond", "957")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
	</ul>
	
	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="cleared"></div>
	</div>

		<h3>1 Trackback or Pingback for this entry</h3>
	<ul class="trackback">
		     <li class="pingback even thread-even depth-1" id="li-comment-4137">
     <div id="comment-4137">
			<div class="commentbody">
			<cite><a href="http://thelegendofrandom.com/blog/archives/2100" rel="external nofollow" class="url">R4ndom’s Tutorial #21: Anti-Debugging Techniques « The Legend Of Random</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-4137" title="">September 14th, 2012 on 4:20 pm</a>  </small>

			<p>[...] initializing code. If you are a little hazy on Windows messages, please go back and re-read my tutorial on Windows [...]</p>
			</div>
     </div>
</li>
	</ul>
	

 
<div class="clr"></div>
<div id="respond">
<h3>Leave a Reply</h3>
<div id="cancel-comment-reply">
	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://thelegendofrandom.com/blog/archives/957#respond" style="display:none;">Click here to cancel reply.</a> </small>
</div>
 
<form action="http://thelegendofrandom.com/blog/wp-comments-post.php" method="post" id="commentform">


<p><input name="author" id="author" size="22" tabindex="1" type="text">
<label for="author"><small>Name </small></label></p>
<p><input name="email" id="email" size="22" tabindex="2" type="text">
<label for="email"><small>Mail (will not be published) </small></label></p>
<p><input name="url" id="url" size="22" tabindex="3" type="text">
<label for="url"><small>Website</small></label></p>

 <input name="comment_post_ID" value="957" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">

<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->
<p><textarea name="comment" id="comment" cols="56" rows="10" tabindex="4"></textarea></p>
<p><input name="submit" id="submit" class="submitbutton" tabindex="5" value="Leave comment" type="submit">
<input name="comment_post_ID" value="957" type="hidden">
</p>

<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="4e93042d24" type="hidden"></p> 
</form>
</div>
 
    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>            
                    </div> <!-- Closes Comment -->

<div id="extrastuff">
<span id="rssleft"><a href="http://thelegendofrandom.com/blog/archives/957/feed"><abbr title="Really Simple Syndication">RSS</abbr> feed for this post (comments)</a> </span>

<span id="trackright"> · <a href="http://thelegendofrandom.com/blog/archives/957/trackback" rel="trackback">TrackBack <abbr title="Uniform Resource Identifier">URI</abbr></a> </span>
<div class="cleared"></div>
</div>


</div><!-- Closes Main -->


<div id="rightcol">
	<div class="roundcornrrbox">
    <div class="topleftcorner"><div class="toprightcorner"></div></div>
    <div class="roundcrrcnt">
        <!-- Optional Intro -->
                
        <!-- widget -->



<h2>Login</h2>
<form action="http://thelegendofrandom.com/blog/wp-login.php" method="post">
<input name="log" id="log" size="20" type="text">
<input name="pwd" id="pwd" size="20" type="password">
<input name="submit" value="Send" class="button" type="submit">
    <p>
       <label for="rememberme"><input name="rememberme" id="rememberme" checked="checked" value="forever" type="checkbox"> Remember me</label>
       <input name="redirect_to" value="/blog/archives/957" type="hidden">
    </p>
</form>
<a href="http://thelegendofrandom.com/blog/wp-login.php?action=lostpassword">Recover password</a> 



        		<li id="recent-posts-2" class="sidebaritem widget_recent_entries"><div class="sidebarbox">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2980" title="My Absence">My Absence</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2975" title="What Are These Strange Posts?">What Are These Strange Posts?</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2966" title="Nice Beginning Article on Reversing Android">Nice Beginning Article on Reversing Android</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2963" title="She Is 17-years-old, She Did It Publicly In High School And While Drunk">She Is 17-years-old, She Did It Publicly In High School And While Drunk</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2961" title="And The Most Posts Submitted In A Single Sitting Goes To…">And The Most Posts Submitted In A Single Sitting Goes To…</a> 
						</li>
				</ul>
		</div></li><li id="recent-comments-2" class="sidebaritem widget_recent_comments"><div class="sidebarbox"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/1722#comment-85953">A New Tutorial by Xor06 : Bypassing a Server Check</a> </li><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/2418#comment-85946">R4ndom’s Tutorial #23: TLS Callbacks</a> </li><li class="recentcomments">C4lculated on <a href="http://thelegendofrandom.com/blog/archives/1472#comment-85945">R4ndom’s Tutorial #17: Working With Delphi Binaries</a> </li><li class="recentcomments"><a href="http://rce-loverz.tk/" rel="external nofollow" class="url">X-Programmer</a>  on <a href="http://thelegendofrandom.com/blog/archives/7#comment-85935">Tutorial #1 : What is Reverse Engineering</a> </li><li class="recentcomments">shub on <a href="http://thelegendofrandom.com/blog/archives/859#comment-85873">R4ndom’s Tutorial #9: Solution</a> </li></ul></div></li><li id="archives-2" class="sidebaritem widget_archive"><div class="sidebarbox"><h2 class="widgettitle">Archives</h2>		<ul>
			<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/05" title="May 2012">May 2012</a> </li>
		</ul>
</div></li><li id="categories-2" class="sidebaritem widget_categories"><div class="sidebarbox"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-23"><a href="http://thelegendofrandom.com/blog/archives/category/beginner" title="View all posts filed under Beginner">Beginner</a> 
</li>
	<li class="cat-item cat-item-31"><a href="http://thelegendofrandom.com/blog/archives/category/challenges" title="View all posts filed under Challenges">Challenges</a> 
</li>
	<li class="cat-item cat-item-24"><a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts filed under Intermediate">Intermediate</a> 
</li>
	<li class="cat-item cat-item-32"><a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts filed under Modifying Binaries">Modifying Binaries</a> 
</li>
	<li class="cat-item cat-item-25"><a href="http://thelegendofrandom.com/blog/archives/category/randoms-ramblings" title="View all posts filed under Random's Ramblings">Random's Ramblings</a> 
</li>
	<li class="cat-item cat-item-3"><a href="http://thelegendofrandom.com/blog/archives/category/reverse-engineering" title="View all posts filed under Reverse Engineering">Reverse Engineering</a> 
</li>
	<li class="cat-item cat-item-4"><a href="http://thelegendofrandom.com/blog/archives/category/tools" title="View all posts filed under Tools">Tools</a> 
</li>
	<li class="cat-item cat-item-5"><a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts filed under Tutorials">Tutorials</a> 
</li>
	<li class="cat-item cat-item-1"><a href="http://thelegendofrandom.com/blog/archives/category/uncategorized" title="View all posts filed under Uncategorized">Uncategorized</a> 
</li>
		</ul>
</div></li><li id="meta-2" class="sidebaritem widget_meta"><div class="sidebarbox"><h2 class="widgettitle">Meta</h2>			<ul>
			<li><a href="http://thelegendofrandom.com/blog/wp-login.php?action=register">Register</a> </li>			<li><a href="http://thelegendofrandom.com/blog/wp-login.php">Log in</a> </li>
			<li><a href="http://thelegendofrandom.com/blog/feed" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a> </li>
						<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a> </li>
						</ul>
</div></li><li id="ajax-quick-subscribe" class="sidebaritem widget_quick_subscribe"><div class="sidebarbox"><h2 class="widgettitle">Subscribe</h2>Enter your email to subscribe to future updates<div id="QSWidgetDiv" class="QSWidgetDiv"><form name="widget_quick_subscribe_form" id="widget_quick_subscribe_form"><input name="QS_user_email_widget" id="QS_user_email_widget" placeholder="email@email.com" onfocus='fadeSubmitIn("widget_qsSubmit");' onblur='fadeSubmitOut(this, "widget_qsSubmit");' onkeypress='return checkForEnter(event, "QS_user_email_widget", "QSWidgetDiv"); return false;' type="email"><input style="display:none;" value="subscribe!" id="widget_qsSubmit" class="widget_qsSubmit" onclick='submitQuickSubscribe("QS_user_email_widget", "QSWidgetDiv");' type="button"></form></div>			
			</div></li> 

        <div class="clr"></div>

    	<div id="feedbox">
            <div id="contrssbox">
                <a href="http://thelegendofrandom.com/blog/feed">RSS Feed</a> 
            </div>
        </div>
        


    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>
</div>
<div class="clr"></div>




    
	<div id="bottompanel">
    <div class="roundcornrrbox">
        <div class="topleftcorner"><div class="toprightcorner"></div></div>
        <div class="roundcrrcnt">
        
        	
            <div class="col1">
                
					                    <h3>Recent Posts</h3>
                    <ul>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2980">My Absence </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2975">What Are These Strange Posts? </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2966">Nice Beginning Article on Reversing Android </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2963">She Is 17-years-old, She Did It Publicly In High School And While Drunk </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2961">And The Most Posts Submitted In A Single Sitting Goes To… </a> 
                            </li>
                        			
                    </ul>
                    

                            </div>
            
            <div class="col2">
                      
                    <h3>Archives</h3>
                    <ul>
                        	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
                    </ul>

                            </div>
            
            <div class="col3">
                                    <h3>Tags</h3>
                    <ul>
                    	<a href="http://thelegendofrandom.com/blog/archives/tag/adding-functionality" class="tag-link-29" title="1 topic" style="font-size: 8pt;">adding functionality</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/assembly-language" class="tag-link-18" title="1 topic" style="font-size: 8pt;">assembly language</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/binary" class="tag-link-26" title="1 topic" style="font-size: 8pt;">binary</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-cave" class="tag-link-27" title="1 topic" style="font-size: 8pt;">code cave</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-caves" class="tag-link-30" title="1 topic" style="font-size: 8pt;">code caves</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/cracking" class="tag-link-8" title="5 topics" style="font-size: 16pt;">cracking</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/crackme" class="tag-link-17" title="1 topic" style="font-size: 8pt;">crackme</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ebook" class="tag-link-19" title="1 topic" style="font-size: 8pt;">ebook</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/exploting-binaries" class="tag-link-28" title="1 topic" style="font-size: 8pt;">exploting binaries</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/guide" class="tag-link-15" title="1 topic" style="font-size: 8pt;">Guide</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly" class="tag-link-14" title="2 topics" style="font-size: 11pt;">Olly</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ollydbg" class="tag-link-10" title="4 topics" style="font-size: 14.666666666667pt;">ollydbg</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly-tutorial" class="tag-link-9" title="1 topic" style="font-size: 8pt;">olly tutorial</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/plugins" class="tag-link-11" title="1 topic" style="font-size: 8pt;">plugins</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/reverse-engineering-2" class="tag-link-7" title="3 topics" style="font-size: 13pt;">reverse engineering</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/sandbox" class="tag-link-13" title="1 topic" style="font-size: 8pt;">sandbox</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tools" class="tag-link-4" title="1 topic" style="font-size: 8pt;">Tools</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tutorial" class="tag-link-16" title="2 topics" style="font-size: 11pt;">tutorial</a>                     </ul>
                    
                            </div>
            <div class="clr"></div>
        

            <div class="clr"></div>
        </div>
        <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
    </div>
</div>
<!-- Bottom Panel ends -->


	
    <div class="copyr">Copyright © 1996-2010 The Legend Of Random. All rights reserved.</div>    
    <div class="clr16"></div>
	</div>
    <div id="layoutbottom"></div>
</div>

<div id="credit" align="center">
	<abbr title="Jarrah/1.7">Jarrah</abbr> theme by <a href="http://www.templatesnext.org/">Templates Next</a>  
    | Powered by <a href="http://wordpress.org/">WordPress</a>  
</div>

<canvas style="display: none;" height="35" width="35"></canvas>


</body></html>