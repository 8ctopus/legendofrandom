<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Modifiying Binaries: Adding a Splash Dialog «  The Legend Of Random</title>
<meta name="generator" content="WordPress 3.5.1">
<meta name="robots" content="follow, all">

<link rel="shortcut icon" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/favicon.ico">
<link rel="stylesheet" href="558_fichiers/style.css" type="text/css" media="screen">
<link rel="stylesheet" href="558_fichiers/menu.css" type="text/css" media="screen">
<!--[if IE]><link rel="stylesheet" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/css/ie.css" type="text/css" media="screen" /><![endif]-->

<link rel="alternate" type="application/rss+xml" title="The Legend Of Random » Modifiying Binaries: Adding a Splash Dialog Comments Feed" href="http://thelegendofrandom.com/blog/archives/558/feed">
<script type="text/javascript" src="558_fichiers/jquery.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var MyAjax = {"ajaxurl":"http:\/\/thelegendofrandom.com\/blog\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="558_fichiers/ajax.js"></script>
<script type="text/javascript" src="558_fichiers/comment-reply.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://thelegendofrandom.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://thelegendofrandom.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="A new series of tutorials" href="http://thelegendofrandom.com/blog/archives/605">
<link rel="next" title="Tutorial #7: More Crackmes" href="http://thelegendofrandom.com/blog/archives/223">
<meta name="generator" content="WordPress 3.5.1">
<link rel="canonical" href="http://thelegendofrandom.com/blog/archives/558">
<link rel="shortlink" href="http://thelegendofrandom.com/blog/?p=558">
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css" id="syntaxhighlighteranchor"></style>

<script type="text/javascript" src="558_fichiers/jquery_004.js"></script>
<script type="text/javascript" src="558_fichiers/jquery_003.js"></script>
<script type="text/javascript" src="558_fichiers/jquery_002.js"></script>
<script type="text/javascript" src="558_fichiers/my-menu.js"></script>

<!-- this product is released under General Public License. Please see the attached file for details. You can also find details about the license at http://www.opensource.org/licenses/gpl-license.php -->
<script type="text/javascript">
/* <![CDATA[ */

jQuery(document).ready(function(){ 
    jQuery(document).pngFix(); 
});

/* ]]> */ 
</script>

</head>

<body>

<div id="wrapper" align="center">
	<div id="layouttop"></div>
    
    <!-- Header Starts -->
    <div id="header">
    	<div id="headerleft">
        	              	<h1><a href="http://thelegendofrandom.com/blog">The Legend Of Random</a> </h1><h3>Programming and Reverse Engineering</h3>
			      	   
        </div>
        <div id="headerright">
        	<div id="searchboxo">
        		<form method="get" id="searchform" action="http://thelegendofrandom.com/blog/">
    <input value="Search keywords" name="s" id="searchbox" onfocus="this.value=''" class="searchinput" type="text">
    <input class="submitbutton" value="" type="submit">
</form> 
            </div>
        </div>
    </div>
    <!-- Header Ends -->

    
    
    <div id="innerwrapper">
    	
        <!-- Main nav Starts here -->
        <div id="navouter">
            <div id="nav">

                                <ul class="lavalamp" id="menu1">
                <li class="page_item "><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/index.html">Home</a> </li>
                <li class="page_item page-item-2"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/sample-page.html">Tutorials</a> </li>
<li class="page_item page-item-27"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/tools.html">Tools</a> </li>
<li class="page_item page-item-153"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/contact-2.html">Contact</a> </li>
<li class="page_item page-item-846"><a href="http://www.thelegendofrandom.com/forum/">Forum</a> </li>
<li class="page_item page-item-1790"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/challenges.html">Challenges</a> </li>
			
                <li style="left: 12px; width: 58px;" class="back"><div class="left"></div></li></ul>
            
            </div>
        </div>
        <!-- Main nav Ends -->
<div id="maincol">
		
        <div class="postwrap">
          	<h2 class="posttitle"><a href="http://thelegendofrandom.com/blog/archives/558">Modifiying Binaries: Adding a Splash Dialog</a> </h2>
          	<div class="postmeta">by <a href="http://thelegendofrandom.com/blog/archives/author/random" title="Posts by R4ndom" rel="author">R4ndom</a>  on Jun.15, 2012, under <a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts in Intermediate" rel="category tag">Intermediate</a> , <a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts in Modifying Binaries" rel="category tag">Modifying Binaries</a> , <a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts in Tutorials" rel="category tag">Tutorials</a> </div>
            <div class="clr16"></div>
          	<div class="postcontent"><h2><span style="color: #0a77e1;">Introduction</span></h2>
<p>In this tutorial I am going to show you how we can add a dialog box 
to the beginning of any app. Personally, I use this trick to help out my
 fellow co-workers, either giving them subtle reminders (“You have used 
deodorant today, right?”) or even helpful messages (“Are you sure you 
want to format your hard drive?”). We will be using a special technique 
called a code cave. I will not be going into great detail about code 
caves as I plan on covering them in my normal beginner’s guide to 
reverse engineering series, but along with the files in the downloads 
for this tutorial I have included a great document on code caves and how
 to use them.</p>
<p>The tools you will need for this tutorial are OllyDBG (any version), 
ODBGScript plugin (included in the download), “Code Cave Finder” script 
for Olly (also included in download), CFF Explorer (or any PE editor- 
you can download CFF from the <a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline; color: #0a77e1;">tools</span></a> </p> page), and the target file called “ColorPicker”. A computer will also come in handy.<p></p>
<p><span id="more-558"></span></p>
<p>The program I am going to use to demonstrate this technique is “Quick
 HTML Color Picker”, a freeware program I have had for ages. It 
basically lets you click any color on the screen and see what it’s RGB 
and hex values are (great help for web designers):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/0.png"><img class="aligncenter size-full wp-image-559" title="ColorPicker" src="558_fichiers/0.png" alt="ColorPicker" height="136" width="357"></a> </p><p></p>
<p>So let’s go ahead and load up the app in Olly…</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/113.png"><img class="aligncenter  wp-image-560" title="Loading the App" src="558_fichiers/113.png" alt="Loading the App" height="374" width="516"></a> </p><p></p>
<p style="text-align: left;">The first thing we want to do is find a code cave. But first, let me give you a quick rundown…</p>
<h2><span style="color: #0a77e1;">Code Caves</span></h2>
<p style="text-align: left;">Normally, a program runs through code, 
calling various functions, jumping to various spots, following a flow 
that the developer (hopefully) planned. Well, it is possible to change 
this flow in order to add, modify, or remove certain functionality in an
 existing binary. Maybe you want to add a menu item that does something 
when you select it, or add a button to a dialog box when clicked. 
Because the original intent of the program was not to do these things, 
the code to perform them are obviously not in the binary- we must add 
it. After deciding what code we wish to add to a program, the problem 
becomes “Where?” Where are we going to put our custom code. And the next
 problem is “How do we tell the program to run our code instead of the 
original code?”</p>
<p style="text-align: left;">For the first problem, the solution is a 
“code cave” (or sometimes “codecave”). What this means is that we are 
going to find some space, either within the program’s memory space 
itself, or in a DLL that we will link in at runtime, that we can store 
our custom code at. There are certain pluses and minuses to the two 
different ways of doing it, either within the program itself or 
attaching a DLL to store the code, but in this tutorial we will use the 
former as it is a little easier. What we are going to do is find a space
 in our program that has nothing in it (no code, resources, variables 
etc.) where we can insert some of our code. This space is usually 
located between sections. This is because sections are segmented by a 
certain amount (meaning they must be a multiple of a certain amount) and
 if the code doesn’t end on exactly that amount, there will be space at 
the end of the code before the next section starts:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/Memory.png"><img class="aligncenter size-full wp-image-611" title="Memory" src="558_fichiers/Memory.png" alt="Memory" height="410" width="679"></a> </p>In
 this picture you can see that the segments are each in 512kb blocks. If
 the data in the last segment is not exactly 512k, there will be some 
space before the next segment begins (purple arrows). Each of the white 
spaces lists how many free bytes are there, prime locations to put a 
code cave. You can also have caves span multiple sections so that the 
first performs some code then calls the second section and so on.<p></p>
<p style="text-align: left;">Sometimes, binaries have very little space 
between segments, so we have to do something a little more involved. 
This may mean saving our code in a non-executable section (like a data 
section) and changing that section’s attributes to be able to execute 
code. It may also mean that we need to create a brand new section that 
will be tacked on to the binary. Fortunately for us, our program has 
lots of space at the end of it’s code section where we can put our 
custom code (though I will be covering some of these other challenges in
 other tutorials <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p style="text-align: left;">Fortunately, there is a script that will 
help us find free memory in an executable section where we can put our 
code cave. If you do not already have ODBGScript as a plugin, get it 
from the files in this download and put it into the plugins folder. 
After you re-run Olly, you can select it and load in a script:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/214.png"><img class="aligncenter  wp-image-561" title="Load the script" src="558_fichiers/214.png" alt="Load the script" height="324" width="413"></a> </p><p></p>
<p style="text-align: left;">Now point ODBGScript to the Code Cave Finder script included in this tutorial and run it:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/38.png"><img class="aligncenter size-full wp-image-562" title="Run the script" src="558_fichiers/38.png" alt="Run the script" height="264" width="430"></a> </p><p></p>
<p style="text-align: left;">After it’s done it will pop up a message 
telling us how we can find any potential empty&nbsp; caves. Click OK 
then cancel the script as it will keep running:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/43.png"><img class="aligncenter size-full wp-image-563" title="Find the cave" src="558_fichiers/43.png" alt="Find the cave" height="171" width="489"></a> </p><p></p>
<p style="text-align: left;">So the script is telling us to look for user defined comments, so let’s do that:</p>
<p style="text-align: center;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/54.png"><img class="aligncenter  wp-image-564" title="Find Comments" src="558_fichiers/54.png" alt="Find Comments" height="540" width="426"></a> </p><p></p>
<p style="text-align: left;">And we see that the script has found a stretch of empty memory at address 42551B:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/63.png"><img class="aligncenter size-full wp-image-565" title="Here's the cave" src="558_fichiers/63.png" alt="Here's the cave" height="142" width="518"></a> </p><p></p>
<p style="text-align: left;">After double-clicking on that line, Olly 
takes us to that section and we can see that, in fact, there is a 
section of empty code here:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/73.png"><img class="aligncenter size-full wp-image-566" title="Seeing the cave in Olly" src="558_fichiers/73.png" alt="Seeing the cave in Olly" height="451" width="687"></a> </p><p></p>
<p style="text-align: left;">If you were to look in the Memory Window 
you would notice that this section of memory is in the .text section, so
 it is already executable <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p style="text-align: left;">Next comes the question of how we are going
 to construct our dialog splash screen. Fortunately for us, this program
 already imports the MessageBoxA function which opens a dialog box. It 
would be OK if it hadn’t, but we would have had to go through the work 
of loading in that function from the DLL, and that’s a little more 
complicated (and saved for a later tutorial). Let’s do a search in our 
program to find the MessageBoxA function. Right-click in the disassembly
 window and choose “Search for” -&gt; “All intermodular calls”. When the
 window first comes up it is sorted by address, so to make it a little 
easier to find what we’re looking for, click on the “Destination” header
 to sort by the function’s name:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/83.png"><img class="aligncenter size-full wp-image-567" title="Intermodular calls window" src="558_fichiers/83.png" alt="Intermodular calls window" height="73" width="449"></a> </p><p></p>
<p style="text-align: left;">Now, one trick in this window is that if we
 start typing the name of the function, Olly will start sorting the list
 for us. As you can see in the next picture, I typed the first four 
letters of MessageBoxA and the window then went right to our desired 
function:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/93.png"><img class="aligncenter size-full wp-image-568" title="MessageBoxA" src="558_fichiers/93.png" alt="MessageBoxA" height="417" width="468"></a> </p><p></p>
<p style="text-align: left;">So, now we know that our program calls 
MessageBoxA (once), probably on an about screen. Now the reason we 
searched for this function is because we want to find out where the 
Windows loader loaded in this function from the User32.dll 
file.Remember, when the file is first loaded, the loader checks to see 
which DLLs our program needs and loads them into our program’s memory 
space. It then iterates through the functions, looking for ones our 
program is going to call. When it finds the address of a particular 
function, it copies it into a “jump table” so that every time our 
program needs to call this function, it will simply call the line in the
 jump table that corresponds to that function. Otherwise, the loader 
would be required to go through every call to that function in our 
program and change the address to what will finally be the true address 
of the called function. (If you want to learn more about the jump table,
 please read my reverse engineering tutorials:) What we need is the 
address that the loader has put into the jump table for the MessageBoxA 
function. When we double-click on the MessageBoxA line in the 
intermodular calls window, we are taken to where that function is called
 in our program:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/103.png"><img class="aligncenter size-full wp-image-569" title="Code for Message Box" src="558_fichiers/103.png" alt="Code for Message Box" height="152" width="795"></a> </p><p></p>
<p style="text-align: left;">You can see, at address 4200D0, that our 
color picker program calls the MessageBoxA function inside User32.dll. 
Olly has kindly tried to help us by telling us it’s MessageBoxA as 
opposed to the actual address that MessageBoxA resides at. In order to 
call this function ourself from our code cave, we need to get this 
address. The way to do that is to click on the “<strong>CALL DWORD PTR DS:[&lt;&amp;USER32. MessageBoxA&gt;]</strong>” and hit the space bar. This will bring up the assembly window (as well as the true address):</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/114.png"><img class="aligncenter size-full wp-image-570" title="Find the address" src="558_fichiers/114.png" alt="Find the address" height="118" width="339"></a> </p><p></p>
<p style="text-align: left;">So we can see that the address we want to call is 426388. I would suggest copying and pasting this whole line (<strong>CALL DWORD PTR DS:[426388]</strong>) into a text editor for later use <img src="558_fichiers/icon_wink.gif" alt=";)" class="wp-smiley">  OK, now let’s go back to our code cave (remember, you can search for all user comments to find the empty space):</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/122.png"><img class="aligncenter size-full wp-image-571" title="Go to cave" src="558_fichiers/122.png" alt="Go to cave" height="158" width="366"></a> </p><p></p>
<p style="text-align: left;">OK, now we want to start coding our own 
code. What this code is going to do is call a dialog box with a custom 
caption and text. It will have an OK button as well. Then, after the 
user closes the dialog, the main program will run like nothing ever 
happened.</p>
<p style="text-align: left;">For those that don’t have an API reference 
handy, the four parameters that are passed to MessageBoxA are 1) a 
handle to the owner’s window, 2) the text to display, 3) the caption 
(title), and 4) the style of the dialog. Of course, since we’re dealing 
in assembly language here, we will push the parameters in reverse order <img src="558_fichiers/icon_wink.gif" alt=";)" class="wp-smiley">
  So let’s start with the first line. Click a couple lines down from the
 beginning of the empty section (I like to give myself a little padding 
for if I forget something I needed at the beginning) and hit the space 
bar to open the assemble window. I started on line 42551E, so you 
probably should as well. I then types in the first instruction, which in
 our case is a PUSH 0:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/133.png"><img class="aligncenter size-full wp-image-572" title="Start assembling" src="558_fichiers/133.png" alt="Start assembling" height="232" width="660"></a> </p><p></p>
<p style="text-align: left;">After you click the assemble button, the 
PUSH 0 instruction is added to the code,&nbsp; and Olly handily leaves 
open the window, waiting for more instructions to assemble. The second 
instruction we want to insert is a push of the address of the caption. 
We don’t know exactly where this will go, so I’m just gonna pick an 
address down the screen a little. You can always come back and change 
the address if you run out of space <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/143.png"><img class="aligncenter size-full wp-image-573" title="Assemble second line" src="558_fichiers/143.png" alt="Assemble second line" height="351" width="659"></a> </p><p></p>
<p style="text-align: left;">I chose address 425537 as the address of the captions text.</p>
<p style="text-align: left;">Next, we must push the address of the text 
that will be displayed in the message box. I am just going to pick a 
number down the page a little more and choose 425557. (We have his 
luxury as this program happens to have a lot of free space. If we didn’t
 have as much, we would have to plan this better <img src="558_fichiers/icon_wink.gif" alt=";)" class="wp-smiley"> </p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/152.png"><img class="aligncenter size-full wp-image-574" title="The third line" src="558_fichiers/152.png" alt="The third line" height="167" width="658"></a> </p><p></p>
<p style="text-align: left;">The last parameter is another PUSH 0, as 
message boxes don’t need actual handles, they can just be set to zero, 
so add that line in next. OK, now that we have pushed our last 
parameter, let’s insert the actual call to MessageBoxA. Remember that 
line we copied earlier and saved in our text editor? That’s the one to 
paste back in:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/173.png"><img class="aligncenter size-full wp-image-575" title="The call to message box" src="558_fichiers/173.png" alt="The call to message box" height="221" width="679"></a> </p><p></p>
<p style="text-align: left;">And after you click assemble, you can 
cancel that window and we now have most of our code. The next thing we 
need to do is add in the strings for the caption and text. If you recall
 for the caption, earlier I chose address 425537 as the address to store
 this, so let’s add it there. Right click no this line and choose 
“Binary” -&gt; “Edit”:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/183.png"><img class="aligncenter size-full wp-image-576" title="Add the caption" src="558_fichiers/183.png" alt="Add the caption" height="364" width="600"></a> </p><p></p>
<p style="text-align: left;">This will bring up our binary edit box. 
Now, I will type in the caption to my message box, in this case “Hey!”. 
Make sure you delete the initial empty character and type in the ASCII 
field and not the other fields. At the end, it should look like this:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/193.png"><img class="aligncenter size-full wp-image-577" title="Binary edit" src="558_fichiers/193.png" alt="Binary edit" height="217" width="379"></a> </p><p></p>
<p style="text-align: left;">Now click OK and you should notice 
something strange; our text is not in there? Instead there’s some crazy 
code that we never typed in! This is actually the binary code we typed 
in, but Olly is assuming for the time being that we typed in assembly 
opcodes instead of data so he is showing it as assembly instructions. 
Don’t worry, this will change shortly:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/204.png"><img class="aligncenter size-full wp-image-578" title="See the data" src="558_fichiers/204.png" alt="See the data" height="172" width="658"></a> </p><p></p>
<p style="text-align: left;">If you recall, the second paramter I pushed
 was the address of the actual text, and this address was 425557. Let’s 
do the same thing at this address (right-click -&gt; Binary -&gt; Edit).
 Type in whatever you want:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/215.png"><img class="aligncenter size-full wp-image-579" title="Add main text" src="558_fichiers/215.png" alt="Add main text" height="448" width="812"></a> </p><p></p>
<p style="text-align: left;">And after you click OK, you will notice 
that this comes up as strange code as well. Don’t worry about that yet. 
Soon Olly will know the difference <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p style="text-align: left;">Now we are confronted with our second 
initial question, “How do we tell the program to run our code instead of
 the original code?” Well, there are a couple ways to do this. In this 
tutorial, we are going to cheat a little and change the entry point (the
 point in the program that will start first) from the original entry 
point to our new code cave. Then, at the end of our code, we are going 
to call the original entry point. This basically makes our code run 
first, and then when it’s done, it will call the regular program. First 
we have to find what this original entry point in the program was. To do
 this, double-click on the EIP register to tell Olly to jump to where we
 are currently paused. Since we have not run the program yet, Olly will 
be paused at the first line of code, which happens to be the original 
Entry Point for the color Picker Program:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/224.png"><img class="aligncenter size-full wp-image-580" title="Finding EP" src="558_fichiers/224.png" alt="Finding EP" height="150" width="605"></a> </p><p></p>
<p style="text-align: left;">As we can see, the OEP (original Entry 
Point) is 40B247. This means that had we not changed anything, this will
 be the first line the CPU will run when this program is executed. What 
we need to do is to jump to this OEP at the end of our code, so go back 
to our code and let’s enter a jump instruction to jump there:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/234.png"><img class="aligncenter size-full wp-image-581" title="Calling the EP" src="558_fichiers/234.png" alt="Calling the EP" height="305" width="720"></a> </p><p></p>
<p style="text-align: left;">Now Olly has still not figured out that our
 strings are strings and that our code is code, but he’s getting 
smarter. In this next picture, the blue section is code and the red 
section is our ASCII string. Notice that Olly has filled in our 
parameters for the MessageBoxA call by looking up our strings:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/244.png"><img class="aligncenter size-full wp-image-582" title="The strings show up" src="558_fichiers/244.png" alt="The strings show up" height="119" width="730"></a> </p><p></p>
<p style="text-align: left;">Now it is time to save our program. 
Highlight the entire section of the code cave where we have added code, 
right click and choose “Save to executable”. This will open our patched 
code in a new window:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/254.png"><img class="aligncenter size-full wp-image-583" title="Saving to executable" src="558_fichiers/254.png" alt="Saving to executable" height="218" width="728"></a> </p><p></p>
<p style="text-align: left;">Now right-click in this new window and choose “Save file”. I chose the name colorPicker2.exe:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/264.png"><img class="aligncenter size-full wp-image-584" title="Saving the file" src="558_fichiers/264.png" alt="Saving the file" height="219" width="682"></a> </p><p></p>
<p style="text-align: left;">Now as a side note, I wanted to show you 
what this new binary looked like with our cave in it, and I’m glad I did
 because there was something I forgot to go over! Load the new program 
(colorPicker2.exe) into olly and go to where we inserted our cave. You 
will see that Olly has displayed the strings correctly, but the first 
instruction, the one that was supposed to be <strong>PUSH 0</strong>, 
has been changed! This is not a mistake. If you recall, our address 
where our cave started was 42551E, but Olly is showing us address 
42551D, so he has gotten the instruction wrong. We don’t need to worry 
about this except to remember that our real entry point in the cave is 
42551E:</p>
<p style="text-align: center;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/275.png"><img class="aligncenter  wp-image-585" title="The new file" src="558_fichiers/275.png" alt="The new file" height="415" width="686"></a> </p><p></p>
<h2><span style="color: #0a77e1;">Changing the OEP</span></h2>
<p style="text-align: left;">So now let’s tell the Windows loader to 
start at our code cave instead of the original entry point. Bring up 
colorPicker2 in CFF Explorer (or any PE editor). You will see that the 
original address of the entry point was B247, which, when added to the 
ImageBase, is 40b247. This was the address that we jumped to at the end 
of our code section!</p>
<p style="text-align: center;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/284.png"><img class="aligncenter  wp-image-586" title="Finding Entry Point" src="558_fichiers/284.png" alt="" height="717" width="669"></a> </p><p></p>
<p style="text-align: left;">Now, what we want to do is change this 
entry point to point to our code instead of the original programs 
starting code. Remember, our code starts at 42551E, so after subtracting
 the ImageBase of 400000, we get 2551E. This is our new entry point:</p>
<p style="text-align: center;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/293.png"><img class="aligncenter  wp-image-587" title="Changing the entry point" src="558_fichiers/293.png" alt="Changing the entry point" height="717" width="669"></a> </p><p></p>
<p style="text-align: left;">Now, save the changes back to the executable (in CFF Explorer, choose “Save”). Now run our new color picker:</p>
<p style="text-align: left;"><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/302.png"><img class="aligncenter size-full wp-image-588" title="The magic happens" src="558_fichiers/302.png" alt="The magic happens" height="154" width="196"></a> </p><p></p>
<p style="text-align: left;">We have done it!!! Now click OK and…</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/0.png"><img class="aligncenter size-full wp-image-559" title="ColorPicker" src="558_fichiers/0.png" alt="ColorPicker" height="136" width="357"></a> </p><p></p>
<p>our program runs normally. Congratulations, we have added a dialog 
splash to a program. Now, go try to be as helpful as I am to other 
people, perhaps offering advice (“That outfit makes you look fat.”) or 
perhaps just some kind words (“You would look soooo much better if you 
lost 40 pounds” <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p>-Till next time</p>
<p>R4ndom</p>
</div>
          	<div class="clr"></div>
          	<span class="linkpages"></span><div class="cleared"></div>
          	
			            
				<div class="roundcornrrbox">
                   	<div class="topleftcorner"><div class="toprightcorner"></div></div>
                    <div class="roubcornrcontent">
            			<span class="posttags-single"><a href="http://thelegendofrandom.com/blog/archives/tag/adding-functionality" rel="tag">adding functionality</a> , <a href="http://thelegendofrandom.com/blog/archives/tag/binary" rel="tag">binary</a> , <a href="http://thelegendofrandom.com/blog/archives/tag/code-cave" rel="tag">code cave</a> , <a href="http://thelegendofrandom.com/blog/archives/tag/code-caves" rel="tag">code caves</a> , <a href="http://thelegendofrandom.com/blog/archives/tag/exploting-binaries" rel="tag">exploting binaries</a> , <a href="http://thelegendofrandom.com/blog/archives/tag/tutorial" rel="tag">tutorial</a> </span>
                    	<div class="clr"></div>
                    </div>
                    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
                </div>                        
                        
			
			        	
            <div class="clr"></div>
        </div> <!-- Closes topPost -->
		<small></small>

		<div id="comments">
			            <!-- WP 2.7 and above -->
            <div class="roundcornrrbox">
	<div class="topleftcorner"><div class="toprightcorner"></div></div>
	<div class="roubcornrcontent">

		<h3 id="commentstitle">18 Comments for this entry</h3>
	<ul class="commentlist">
		   <li class="comment even thread-even depth-1" id="li-comment-359">
     <div id="comment-359">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/522305c5e3e115d033741933bc2f40ad.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>shane</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-359" title="">June 16th, 2012 on 6:39 am</a>  </small>

			<p>Nice tutorial , <img src="558_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=359#respond" onclick='return addComment.moveForm("comment-359", "359", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-391">
     <div id="comment-391">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/140038f170eb1973d9c1145e68ff8ee8.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>NoName</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-391" title="">June 18th, 2012 on 10:38 am</a>  </small>

			<p>Hmm….nice article – it works with me but only when I switch off my
 AV. Weirdo – changing the OEP seems to flag the AV. Do you have an idea
 why it is like that???</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=391#respond" onclick='return addComment.moveForm("comment-391", "391", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor even depth-2" id="li-comment-398">
     <div id="comment-398">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-398" title="">June 18th, 2012 on 5:06 pm</a>  </small>

			<p>Yes, because the technique you are using is often used with 
viruses and your AV software is picking up on this. Unfortunately, 
viruses have made it a lot more difficult to just have fun with binaries
 <img src="558_fichiers/icon_sad.gif" alt=":(" class="wp-smiley"> </p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=398#respond" onclick='return addComment.moveForm("comment-398", "398", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
   <li class="comment odd alt thread-even depth-1" id="li-comment-412">
     <div id="comment-412">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/140038f170eb1973d9c1145e68ff8ee8.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>NoName</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-412" title="">June 19th, 2012 on 7:30 am</a>  </small>

			<p>I wonder what the AV is picking up excactly?<br>
- changing the OEP? How does the AV know that the OEP is changed? OEP is still in the text section so all should be fine<br>
- the jump back to old OEP?</p>
<p>Btw. not all AVs detect this technique  <img src="558_fichiers/icon_smile.gif" alt=":-)" class="wp-smiley"> </p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=412#respond" onclick='return addComment.moveForm("comment-412", "412", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor even depth-2" id="li-comment-427">
     <div id="comment-427">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-427" title="">June 19th, 2012 on 4:19 pm</a>  </small>

			<p>Well, I am not an anti-virus expert but anti-virus software 
vendors use heuristics (as well as signatures) to detect infection. In 
this case, it looks suspicious because it follows a pattern used by many
 virus injectors, namely, the entry point points to the end of the file,
 a small function is run, and then jumps to the beginning of the file. 
This is a red flag to some AV engines.</p>
<p>If you want to see how AV can get it wrong, take any crackme that you know has no infection and submit it to <a href="http://www.virustotal.com/" rel="nofollow">http://www.VirusTotal.com</a> </p>.
 If you don’t know, VirusTotal will submit your file to 40 different AV 
engines and get the results. I GUARANTEE you that 99% of any 
non-malicious crackme will have at least 5 false positives. In fact, try
 taking something completely innocuous, like Windows Calculator, pack it
 using UPX (or some packer) and submit it to VirusTotal. You’ll get 
everything from Trojans to backdoors to…well, everything. AV’s are not 
perfect, and they must choose how to flag something.<p></p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=427#respond" onclick='return addComment.moveForm("comment-427", "427", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment odd alt depth-3" id="li-comment-438">
     <div id="comment-438">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/140038f170eb1973d9c1145e68ff8ee8.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>NoName</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-438" title="">June 20th, 2012 on 7:44 am</a>  </small>

			<p>Thanks for your comprehensive answer R4ndom. And keep up with the good work!!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=438#respond" onclick='return addComment.moveForm("comment-438", "438", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
</ul>
</li>
   <li class="comment even thread-odd thread-alt depth-1" id="li-comment-1359">
     <div id="comment-1359">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/344831e33b76634e936f8d1705c3b929.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://earth.uni/" rel="external nofollow" class="url">level2</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1359" title="">July 17th, 2012 on 11:12 pm</a>  </small>

			<p>Thank you very much</p>
<p>but why it doesn’t work under windows 64bit?</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=1359#respond" onclick='return addComment.moveForm("comment-1359", "1359", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-1369">
     <div id="comment-1369">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1369" title="">July 18th, 2012 on 2:38 am</a>  </small>

			<p>It should work under Windows 64-bit, that’s what I used to make the tutorial.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=1369#respond" onclick='return addComment.moveForm("comment-1369", "1369", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-1398">
     <div id="comment-1398">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Anonymous</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1398" title="">July 18th, 2012 on 4:19 pm</a>  </small>

			<p>The bytes at the address 42551D – 42551E, That should translate to
 push 0 and olly is interpretting it incorrectly. How do you get olly to
 interpret the instructions as push 0?.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=1398#respond" onclick='return addComment.moveForm("comment-1398", "1398", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1399">
     <div id="comment-1399">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/58dfb24bf476d467ebb95c67c8cd8b22.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://aerokid240.blogspot.com/" rel="external nofollow" class="url">aerokid240</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-1399" title="">July 18th, 2012 on 4:34 pm</a>  </small>

			<p>Sorry, i was the anonymous poster that enquired about olly 
interpreting the bytes at 42551D incorrectly. Just wanted to note my 
email address incase you choose to respond to me there. I just found out
 about your blog today and find it very useful. Thanks for the 
tutorials.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=1399#respond" onclick='return addComment.moveForm("comment-1399", "1399", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2823">
     <div id="comment-2823">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Raingarden9</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2823" title="">August 14th, 2012 on 8:15 pm</a>  </small>

			<p>One can read all over the tubes that .code section is read-only. Obviously is not, else code cave wouldn’t be possible. Right?</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=2823#respond" onclick='return addComment.moveForm("comment-2823", "2823", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-2859">
     <div id="comment-2859">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2859" title="">August 15th, 2012 on 4:03 pm</a>  </small>

			<p>I’m sorry, I don’t understand your question. What are ‘tubes’?</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=2859#respond" onclick='return addComment.moveForm("comment-2859", "2859", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
   <li class="comment even thread-odd thread-alt depth-1" id="li-comment-2870">
     <div id="comment-2870">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Raingarden9</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2870" title="">August 15th, 2012 on 7:18 pm</a>  </small>

			<p>Sorry for the lame wording.</p>
<p>The point is that many articles states that .code section is 
read-only. But when your are using code cave you are actually writing 
new code into .code section. So my assumption was that this section is 
not (always) read-only.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=2870#respond" onclick='return addComment.moveForm("comment-2870", "2870", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-2874">
     <div id="comment-2874">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2874" title="">August 15th, 2012 on 7:51 pm</a>  </small>

			<p>ooooooohhhhhhhh. I get it now. The code section is still usually 
read only. This is why Olly makes you re-save the changes you’ve made to
 a binary. It creates a new version of the file with your changes in it.
 If you tried to change one of these locations through code, it would 
not work.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=2874#respond" onclick='return addComment.moveForm("comment-2874", "2874", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2876">
     <div id="comment-2876">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>Raingarden9</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2876" title="">August 15th, 2012 on 8:35 pm</a>  </small>

			<p>Thanks R4ndom. That explains it all (yes, I know this is also written in the article, but I was a bit confused anyway).</p>
<p>Keep on writing excellent articles.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=2876#respond" onclick='return addComment.moveForm("comment-2876", "2876", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-5290">
     <div id="comment-5290">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>gdogg</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-5290" title="">October 11th, 2012 on 3:54 am</a>  </small>

			<p>Another good one. Finally back here and going to go through all 
your tuts. It would be nice if you showed how to edit the entrance 
pointer in the hex dump (Does OllyDBG have a PE header decoding plugin?)</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=5290#respond" onclick='return addComment.moveForm("comment-5290", "5290", "respond", "558")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor even depth-2" id="li-comment-5332">
     <div id="comment-5332">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="558_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-5332" title="">October 11th, 2012 on 6:05 pm</a>  </small>

			<p>What do you mean by that? The Entry Point?</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=5332#respond" onclick='return addComment.moveForm("comment-5332", "5332", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
   <li class="comment odd alt thread-even depth-1" id="li-comment-8036">
     <div id="comment-8036">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="558_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite><a href="http://www.softwaresprogramming.com/" rel="external nofollow" class="url">Kingstaa</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-8036" title="">November 22nd, 2012 on 1:38 pm</a>  </small>

			<p>Very good tutorial.  If you dont mind, i think the right title 
would be adding a message box to executable.  The splash screen 
basically means an image in the jpg, png, gif or any other format.  Keep
 up your good work.</p>
<p>Regards,<br>
Kingstaa</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558?replytocom=8036#respond" onclick='return addComment.moveForm("comment-8036", "8036", "respond", "558")'>Reply</a>       </div>
     </div>
</li>
	</ul>
	
	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="cleared"></div>
	</div>

	

 
<div class="clr"></div>
<div id="respond">
<h3>Leave a Reply</h3>
<div id="cancel-comment-reply">
	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://thelegendofrandom.com/blog/archives/558#respond" style="display:none;">Click here to cancel reply.</a> </small>
</div>
 
<form action="http://thelegendofrandom.com/blog/wp-comments-post.php" method="post" id="commentform">


<p><input name="author" id="author" size="22" tabindex="1" type="text">
<label for="author"><small>Name </small></label></p>
<p><input name="email" id="email" size="22" tabindex="2" type="text">
<label for="email"><small>Mail (will not be published) </small></label></p>
<p><input name="url" id="url" size="22" tabindex="3" type="text">
<label for="url"><small>Website</small></label></p>

 <input name="comment_post_ID" value="558" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">

<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->
<p><textarea name="comment" id="comment" cols="56" rows="10" tabindex="4"></textarea></p>
<p><input name="submit" id="submit" class="submitbutton" tabindex="5" value="Leave comment" type="submit">
<input name="comment_post_ID" value="558" type="hidden">
</p>

<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="b01e6407fb" type="hidden"></p> 
</form>
</div>
 
    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>            
                    </div> <!-- Closes Comment -->

<div id="extrastuff">
<span id="rssleft"><a href="http://thelegendofrandom.com/blog/archives/558/feed"><abbr title="Really Simple Syndication">RSS</abbr> feed for this post (comments)</a> </span>

<span id="trackright"> · <a href="http://thelegendofrandom.com/blog/archives/558/trackback" rel="trackback">TrackBack <abbr title="Uniform Resource Identifier">URI</abbr></a> </span>
<div class="cleared"></div>
</div>


</div><!-- Closes Main -->


<div id="rightcol">
	<div class="roundcornrrbox">
    <div class="topleftcorner"><div class="toprightcorner"></div></div>
    <div class="roundcrrcnt">
        <!-- Optional Intro -->
                
        <!-- widget -->



<h2>Login</h2>
<form action="http://thelegendofrandom.com/blog/wp-login.php" method="post">
<input name="log" id="log" size="20" type="text">
<input name="pwd" id="pwd" size="20" type="password">
<input name="submit" value="Send" class="button" type="submit">
    <p>
       <label for="rememberme"><input name="rememberme" id="rememberme" checked="checked" value="forever" type="checkbox"> Remember me</label>
       <input name="redirect_to" value="/blog/archives/558" type="hidden">
    </p>
</form>
<a href="http://thelegendofrandom.com/blog/wp-login.php?action=lostpassword">Recover password</a> 



        		<li id="recent-posts-2" class="sidebaritem widget_recent_entries"><div class="sidebarbox">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2980" title="My Absence">My Absence</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2975" title="What Are These Strange Posts?">What Are These Strange Posts?</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2966" title="Nice Beginning Article on Reversing Android">Nice Beginning Article on Reversing Android</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2963" title="She Is 17-years-old, She Did It Publicly In High School And While Drunk">She Is 17-years-old, She Did It Publicly In High School And While Drunk</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2961" title="And The Most Posts Submitted In A Single Sitting Goes To…">And The Most Posts Submitted In A Single Sitting Goes To…</a> 
						</li>
				</ul>
		</div></li><li id="recent-comments-2" class="sidebaritem widget_recent_comments"><div class="sidebarbox"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/1722#comment-85953">A New Tutorial by Xor06 : Bypassing a Server Check</a> </li><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/2418#comment-85946">R4ndom’s Tutorial #23: TLS Callbacks</a> </li><li class="recentcomments">C4lculated on <a href="http://thelegendofrandom.com/blog/archives/1472#comment-85945">R4ndom’s Tutorial #17: Working With Delphi Binaries</a> </li><li class="recentcomments"><a href="http://rce-loverz.tk/" rel="external nofollow" class="url">X-Programmer</a>  on <a href="http://thelegendofrandom.com/blog/archives/7#comment-85935">Tutorial #1 : What is Reverse Engineering</a> </li><li class="recentcomments">shub on <a href="http://thelegendofrandom.com/blog/archives/859#comment-85873">R4ndom’s Tutorial #9: Solution</a> </li></ul></div></li><li id="archives-2" class="sidebaritem widget_archive"><div class="sidebarbox"><h2 class="widgettitle">Archives</h2>		<ul>
			<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/05" title="May 2012">May 2012</a> </li>
		</ul>
</div></li><li id="categories-2" class="sidebaritem widget_categories"><div class="sidebarbox"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-23"><a href="http://thelegendofrandom.com/blog/archives/category/beginner" title="View all posts filed under Beginner">Beginner</a> 
</li>
	<li class="cat-item cat-item-31"><a href="http://thelegendofrandom.com/blog/archives/category/challenges" title="View all posts filed under Challenges">Challenges</a> 
</li>
	<li class="cat-item cat-item-24"><a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts filed under Intermediate">Intermediate</a> 
</li>
	<li class="cat-item cat-item-32"><a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts filed under Modifying Binaries">Modifying Binaries</a> 
</li>
	<li class="cat-item cat-item-25"><a href="http://thelegendofrandom.com/blog/archives/category/randoms-ramblings" title="View all posts filed under Random's Ramblings">Random's Ramblings</a> 
</li>
	<li class="cat-item cat-item-3"><a href="http://thelegendofrandom.com/blog/archives/category/reverse-engineering" title="View all posts filed under Reverse Engineering">Reverse Engineering</a> 
</li>
	<li class="cat-item cat-item-4"><a href="http://thelegendofrandom.com/blog/archives/category/tools" title="View all posts filed under Tools">Tools</a> 
</li>
	<li class="cat-item cat-item-5"><a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts filed under Tutorials">Tutorials</a> 
</li>
	<li class="cat-item cat-item-1"><a href="http://thelegendofrandom.com/blog/archives/category/uncategorized" title="View all posts filed under Uncategorized">Uncategorized</a> 
</li>
		</ul>
</div></li><li id="meta-2" class="sidebaritem widget_meta"><div class="sidebarbox"><h2 class="widgettitle">Meta</h2>			<ul>
			<li><a href="http://thelegendofrandom.com/blog/wp-login.php?action=register">Register</a> </li>			<li><a href="http://thelegendofrandom.com/blog/wp-login.php">Log in</a> </li>
			<li><a href="http://thelegendofrandom.com/blog/feed" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a> </li>
						<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a> </li>
						</ul>
</div></li><li id="ajax-quick-subscribe" class="sidebaritem widget_quick_subscribe"><div class="sidebarbox"><h2 class="widgettitle">Subscribe</h2>Enter your email to subscribe to future updates<div id="QSWidgetDiv" class="QSWidgetDiv"><form name="widget_quick_subscribe_form" id="widget_quick_subscribe_form"><input name="QS_user_email_widget" id="QS_user_email_widget" placeholder="email@email.com" onfocus='fadeSubmitIn("widget_qsSubmit");' onblur='fadeSubmitOut(this, "widget_qsSubmit");' onkeypress='return checkForEnter(event, "QS_user_email_widget", "QSWidgetDiv"); return false;' type="email"><input style="display:none;" value="subscribe!" id="widget_qsSubmit" class="widget_qsSubmit" onclick='submitQuickSubscribe("QS_user_email_widget", "QSWidgetDiv");' type="button"></form></div>			
			</div></li> 

        <div class="clr"></div>

    	<div id="feedbox">
            <div id="contrssbox">
                <a href="http://thelegendofrandom.com/blog/feed">RSS Feed</a> 
            </div>
        </div>
        


    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>
</div>
<div class="clr"></div>




    
	<div id="bottompanel">
    <div class="roundcornrrbox">
        <div class="topleftcorner"><div class="toprightcorner"></div></div>
        <div class="roundcrrcnt">
        
        	
            <div class="col1">
                
					                    <h3>Recent Posts</h3>
                    <ul>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2980">My Absence </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2975">What Are These Strange Posts? </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2966">Nice Beginning Article on Reversing Android </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2963">She Is 17-years-old, She Did It Publicly In High School And While Drunk </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2961">And The Most Posts Submitted In A Single Sitting Goes To… </a> 
                            </li>
                        			
                    </ul>
                    

                            </div>
            
            <div class="col2">
                      
                    <h3>Archives</h3>
                    <ul>
                        	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
                    </ul>

                            </div>
            
            <div class="col3">
                                    <h3>Tags</h3>
                    <ul>
                    	<a href="http://thelegendofrandom.com/blog/archives/tag/adding-functionality" class="tag-link-29" title="1 topic" style="font-size: 8pt;">adding functionality</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/assembly-language" class="tag-link-18" title="1 topic" style="font-size: 8pt;">assembly language</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/binary" class="tag-link-26" title="1 topic" style="font-size: 8pt;">binary</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-cave" class="tag-link-27" title="1 topic" style="font-size: 8pt;">code cave</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-caves" class="tag-link-30" title="1 topic" style="font-size: 8pt;">code caves</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/cracking" class="tag-link-8" title="5 topics" style="font-size: 16pt;">cracking</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/crackme" class="tag-link-17" title="1 topic" style="font-size: 8pt;">crackme</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ebook" class="tag-link-19" title="1 topic" style="font-size: 8pt;">ebook</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/exploting-binaries" class="tag-link-28" title="1 topic" style="font-size: 8pt;">exploting binaries</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/guide" class="tag-link-15" title="1 topic" style="font-size: 8pt;">Guide</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly" class="tag-link-14" title="2 topics" style="font-size: 11pt;">Olly</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ollydbg" class="tag-link-10" title="4 topics" style="font-size: 14.666666666667pt;">ollydbg</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly-tutorial" class="tag-link-9" title="1 topic" style="font-size: 8pt;">olly tutorial</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/plugins" class="tag-link-11" title="1 topic" style="font-size: 8pt;">plugins</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/reverse-engineering-2" class="tag-link-7" title="3 topics" style="font-size: 13pt;">reverse engineering</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/sandbox" class="tag-link-13" title="1 topic" style="font-size: 8pt;">sandbox</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tools" class="tag-link-4" title="1 topic" style="font-size: 8pt;">Tools</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tutorial" class="tag-link-16" title="2 topics" style="font-size: 11pt;">tutorial</a>                     </ul>
                    
                            </div>
            <div class="clr"></div>
        

            <div class="clr"></div>
        </div>
        <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
    </div>
</div>
<!-- Bottom Panel ends -->


	
    <div class="copyr">Copyright © 1996-2010 The Legend Of Random. All rights reserved.</div>    
    <div class="clr16"></div>
	</div>
    <div id="layoutbottom"></div>
</div>

<div id="credit" align="center">
	<abbr title="Jarrah/1.7">Jarrah</abbr> theme by <a href="http://www.templatesnext.org/">Templates Next</a>  
    | Powered by <a href="http://wordpress.org/">WordPress</a>  
</div>

<canvas style="display: none;" height="35" width="35"></canvas>


</body></html>