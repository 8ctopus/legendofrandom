<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Modifying Binaries: The Never Ending Program «  The Legend Of Random</title>
<meta name="generator" content="WordPress 3.5.1">
<meta name="robots" content="follow, all">

<link rel="shortcut icon" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/favicon.ico">
<link rel="stylesheet" href="1347_fichiers/style.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="The Legend Of Random RSS Feed" href="http://thelegendofrandom.com/blog/feed">
<link rel="pingback" href="http://thelegendofrandom.com/blog/xmlrpc.php">
<link rel="stylesheet" href="1347_fichiers/menu.css" type="text/css" media="screen">
<!--[if IE]><link rel="stylesheet" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/css/ie.css" type="text/css" media="screen" /><![endif]-->

<link rel="alternate" type="application/rss+xml" title="The Legend Of Random » Modifying Binaries: The Never Ending Program Comments Feed" href="http://thelegendofrandom.com/blog/archives/1347/feed">
<script type="text/javascript" src="1347_fichiers/jquery.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var MyAjax = {"ajaxurl":"http:\/\/thelegendofrandom.com\/blog\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="1347_fichiers/ajax.js"></script>
<script type="text/javascript" src="1347_fichiers/comment-reply.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://thelegendofrandom.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://thelegendofrandom.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="More Tutorials Uploaded by Members" href="http://thelegendofrandom.com/blog/archives/1469">
<link rel="next" title="R4ndom’s Tutorial #16B: Self Modifying Code" href="http://thelegendofrandom.com/blog/archives/1424">
<meta name="generator" content="WordPress 3.5.1">
<link rel="canonical" href="http://thelegendofrandom.com/blog/archives/1347">
<link rel="shortlink" href="http://thelegendofrandom.com/blog/?p=1347">
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css" id="syntaxhighlighteranchor"></style>

<script type="text/javascript" src="1347_fichiers/jquery_003.js"></script>
<script type="text/javascript" src="1347_fichiers/jquery_002.js"></script>
<script type="text/javascript" src="1347_fichiers/jquery_004.js"></script>
<script type="text/javascript" src="1347_fichiers/my-menu.js"></script>

<!-- this product is released under General Public License. Please see the attached file for details. You can also find details about the license at http://www.opensource.org/licenses/gpl-license.php -->
<script type="text/javascript">
/* <![CDATA[ */

jQuery(document).ready(function(){ 
    jQuery(document).pngFix(); 
});

/* ]]> */ 
</script>

</head>

<body>

<div id="wrapper" align="center">
	<div id="layouttop"></div>
    
    <!-- Header Starts -->
    <div id="header">
    	<div id="headerleft">
        	              	<h1><a href="http://thelegendofrandom.com/blog">The Legend Of Random</a> </h1><h3>Programming and Reverse Engineering</h3>
			      	   
        </div>
        <div id="headerright">
        	<div id="searchboxo">
        		<form method="get" id="searchform" action="http://thelegendofrandom.com/blog/">
    <input value="Search keywords" name="s" id="searchbox" onfocus="this.value=''" class="searchinput" type="text">
    <input class="submitbutton" value="" type="submit">
</form> 
            </div>
        </div>
    </div>
    <!-- Header Ends -->

    
    
    <div id="innerwrapper">
    	
        <!-- Main nav Starts here -->
        <div id="navouter">
            <div id="nav">

                                <ul class="lavalamp" id="menu1">
                <li class="page_item "><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/index.html">Home</a> </li>
                <li class="page_item page-item-2"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/sample-page.html">Tutorials</a> </li>
<li class="page_item page-item-27"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/tools.html">Tools</a> </li>
<li class="page_item page-item-153"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/contact-2.html">Contact</a> </li>
<li class="page_item page-item-846"><a href="http://www.thelegendofrandom.com/forum/">Forum</a> </li>
<li class="page_item page-item-1790"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/challenges.html">Challenges</a> </li>
			
                <li style="left: 12px; width: 58px;" class="back"><div class="left"></div></li></ul>
            
            </div>
        </div>
        <!-- Main nav Ends -->
<div id="maincol">
		
        <div class="postwrap">
          	<h2 class="posttitle"><a href="http://thelegendofrandom.com/blog/archives/1347">Modifying Binaries: The Never Ending Program</a> </h2>
          	<div class="postmeta">by <a href="http://thelegendofrandom.com/blog/archives/author/random" title="Posts by R4ndom" rel="author">R4ndom</a>  on Aug.01, 2012, under <a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts in Intermediate" rel="category tag">Intermediate</a> , <a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts in Modifying Binaries" rel="category tag">Modifying Binaries</a> , <a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts in Tutorials" rel="category tag">Tutorials</a> </div>
            <div class="clr16"></div>
          	<div class="postcontent"><h2><span style="color: #0a77e1;">Introduction</span></h2>
<p>As an extension of my last modifying binaries tutorial on making 
programs non-closeable, I decided to take it one step further. In this 
tutorial I will teach you how to trap when someone tries to close the 
program and allow us to perform whatever code we want when this happens.
 This can come in handy if, for example, you want to drive someone to be
 the best they can be by placing helpful message boxes for them every 
time they try to close their word processor, such as “You don’t really 
think that paper is any good, do you? Try again” and “I’m not letting 
you close this app until you have really put some effort into this 
paper.”</p>
<p>In this tutorial the only tools you will need are OllyDBG (either the original version or my version on the <span style="color: #0a77e1;"><a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline; color: #0a77e1;">tools</span></a> </span></p> page) and a copy of the target, which can be downloaded with this tutorial on the <a title="Tutorials" href="http://thelegendofrandom.com/blog/sample-page"><span style="text-decoration: underline;"><span style="color: #0a77e1; text-decoration: underline;">tutorials</span></span></a>  page.<p></p>
<p><span id="more-1347"></span></p>
<h2><span style="color: #0a77e1;">Investigating the App</span></h2>
<p>The app I chose for this is one of the examples used in Petzold’s 
“Programming Windows” book- one of the best books on programming windows
 there is (though it is a little dated). In it there is an example 
program called “HexCalc” that is a poor man’s version of Windows Calc. 
Running the program, you can see what I mean:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/139.png"><img class="aligncenter size-full wp-image-1348" title="Loading the app" src="1347_fichiers/139.png" alt="" height="282" width="220"></a> </p><p></p>
<p>As you can see, it’s just a basic calculator for calculating in hex. Loading the app in Olly:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/228.png"><img class="aligncenter size-full wp-image-1349" title="Loading in Olly" src="1347_fichiers/228.png" alt="" height="430" width="609"></a> </p><p></p>
<p>For some reason Olly has decided to not analyze automatically. We can
 tell because the method calls and arguments are not highlighted. If you
 have AnalyzeThis plugin, run that (you can download on the <a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline; color: #0a77e1;">tools</span></a> </p>
 page). Otherwise right-click in disassembly window and choose “Analyze”
 -&gt; “Analyze code” and Olly will clean it up a little:<p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/323.png"><img class="aligncenter size-full wp-image-1350" title="AnalyzeThis" src="1347_fichiers/323.png" alt="" height="285" width="658"></a> </p><p></p>
<p>That looks better. In this tutorial we will be switching back and 
forth between a lot of different address, so I will use the bookmarks 
plugin to keep them straight. This plugin can also be downloaded on the <a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline; color: #0a77e1;">tools</span></a> </p> page. The first bookmark I will place is on the entry point as it is not at the start of the program:<p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/421.png"><img class="aligncenter size-full wp-image-1351" title="Place first bookmark" src="1347_fichiers/421.png" alt="" height="608" width="572"></a> </p><p></p>
<p>and I will call it “Entry Point”:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/59.png"><img class="aligncenter size-full wp-image-1352" title="Bookmark 1" src="1347_fichiers/59.png" alt="" height="150" width="336"></a> </p><p></p>
<p>Then, opening the bookmarks window I can see my bookmark (Plugins-&gt;Bookmarks-&gt;Bookmarks):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/610.png"><img class="aligncenter size-full wp-image-1353" title="Bookmark window" src="1347_fichiers/610.png" alt="" height="186" width="286"></a> </p><p></p>
<p>Now, our ultimate goal is to find the WndProc or DlgProc callback 
functions so that we can trap the Windows message that tells the window 
to close and put our own code in it. If you haven’t, please look over my
 modifying binaries tutorial “Making an App Non-Closeable” as it goes 
over finding these callback procedures. Assuming you read that over (or 
have a basic understanding of how Windows creates windows and dialog 
boxes) we can open the intermodular calls window (right-click -&gt; 
Search for -&gt; All intermodular calls) and see whether this program 
uses a typical window or a dialog box as it’s main screen:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/710.png"><img class="aligncenter size-full wp-image-1354" title="Intermodular calls" src="1347_fichiers/710.png" alt="" height="402" width="539"></a> </p><p></p>
<p>We first look for RegisterClassA or RegisterClassExA, and if it’s 
there, as it is in this case, we can assume that this app uses a window 
for its main screen as opposed to a dialog box.</p>
<p>*** If there was no RegisterClassA then we would look for DialogBoxParamA and go that way instead. ***</p>
<p>Double-clicking on RegisterClassA we come to the main call:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/810.png"><img class="aligncenter size-full wp-image-1355" title="Jump to registerClassA" src="1347_fichiers/810.png" alt="" height="197" width="569"></a> </p><p></p>
<p>I have put a BP on the call just to highlight it. Now, you will 
recall from my other tutorial that when a window is registered, the 
address for the message handler callback will be pushed onto the stack 
as one of the arguments. To find this we go up a line or two and look 
for the ubiquitous PUSH EAX:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/910.png"><img class="aligncenter size-full wp-image-1356" title="Set BP on PUSH EAX" src="1347_fichiers/910.png" alt="" height="78" width="548"></a> </p><p></p>
<p>We then look at the value of EAX by highlighting that line and looking in the info window:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1010.png"><img class="aligncenter size-full wp-image-1357" title="Viewing EAX" src="1347_fichiers/1010.png" alt="" height="93" width="118"></a> </p><p></p>
<p>Here we can see that EAX is 12FED8. Looking over in the stack window 
under 12FED8 we see the number 3 pushed, and under that is the callback 
address for the message handler:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1114.png"><img class="aligncenter size-full wp-image-1358" title="Finding WndProc on stack" src="1347_fichiers/1114.png" alt="" height="243" width="427"></a> </p><p></p>
<p>So the main message handler is located at address 401280. Let’s go to that code:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1211.png"><img class="aligncenter size-full wp-image-1359" title="WndProc" src="1347_fichiers/1211.png" alt="" height="473" width="562"></a> </p><p></p>
<p>Seeing the Switch (cases 2…111) is a dead giveaway that this is the 
message handler. I will go ahead and set a bookmark here as well called 
“Message Handler”.</p>
<p>As a refresher, Windows will send every message through this 
callback, and our program can either decide to act on it or send it on 
to Windows for Windows to handle it. The message we need to trap is the 
WM_CLOSE message, or 0×10. You can look up all Windows messages and 
their hex values by downloading my cheat sheet on the <a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline;"><span style="color: #0a77e1; text-decoration: underline;">tools</span></span></a> </p> page under texts.<p></p>
<p>Let’s run the app and see this for ourselves. Remove any breakpoints 
and run the app in Olly. The main HexCalc window will show up. Make sure
 that Olly (or any other window) is not covering up the HexCalc screen 
or you won’t be able to send the proper messages in to Olly. Now place a
 BP at address 401292 as this is our first conditional jump:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1310.png"><img class="aligncenter size-full wp-image-1361" title="Breakpoint at first jump" src="1347_fichiers/1310.png" alt="" height="196" width="597"></a> </p><p></p>
<p>Olly will now pause when any messages from Windows comes through our 
handler. (You will notice that if you move the mouse over the HexCalc 
window Olly will pause. This is because a mouse event has been passed 
into the handler. If this happens, just F9 until Olly is running again.)</p>
<p>Now, what we want to do is hover our mouse just outside the ‘X’ close
 button in the top right corner of HexCalc (but not touching the HexCalc
 window) and then quickly click the ‘X’ button. The reason for this is 
we want to minimize the number of messages that flow through the 
handler. Otherwise we’ll be going through an awful lot until Windows 
passes the WM_CLOSE message.</p>
<p>You won’t see the window close as Olly will pause immediately when 
the first message comes through which will probably be a mouse event. So
 switch over to Olly and let’s see the messages come through and what 
happens when they do:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/147.png"><img class="aligncenter size-full wp-image-1362" title="Olly breaks at first message" src="1347_fichiers/147.png" alt="" height="354" width="574"></a> </p><p></p>
<p>Looking at the compares we can see that the windows message ID will 
be in EBX (this will not always be the case). We can see that EBX 
contains 0×20:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/157.png"><img class="aligncenter size-full wp-image-1363" title="EBX = 20" src="1347_fichiers/157.png" alt="" height="97" width="92"></a> </p><p></p>
<p>Looking up hex 20 in our cheat sheet we can see that this is the 
windows message for WM_SETCURSOR. Single stepping the code we see that 
this message is eventually given to DefWindowProcA. This is the function
 to allow Windows to handle the message instead of our program handling 
the message. We can also see that this is the default of the switch/case
 statement. This is important because the message we want, WM_CLOSE, 
will also be passed back to Windows to handle.</p>
<p>Go ahead and hit F9 to see the next message come through:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/166.png"><img class="aligncenter size-full wp-image-1364" title="Next message" src="1347_fichiers/166.png" alt="" height="118" width="579"></a> </p><p></p>
<p>and we can see that it also has an ID of 20. Now, you will F9 several
 times until we get to the ID we want, 0×10. If you want, you can look 
up the various messages that come through in our cheat sheet. They will 
be such things as WM_SETFOCUS, WM_MOUSEBUTTONDOWN etc. Keep pressing F9 
until EBX contains 0×10:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/175.png"><img class="aligncenter size-full wp-image-1365" title="EBX = 10" src="1347_fichiers/175.png" alt="" height="100" width="106"></a> </p><p></p>
<p>These are the message IDs I went through to get to 0×10 (yours may be
 different): A0, 2A2, 21, 46, 1C, 86, 06, 281, 282, 07, 215, AE, 112.</p>
<p>OK, our WM_CLOSE message has come through. Now let’s single step and 
see what it does. First, it hits the jump at address 4012AC and will 
jump.</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/186.png"><img class="aligncenter size-full wp-image-1366" title="Jump to DefWindow" src="1347_fichiers/186.png" alt="" height="187" width="576"></a> </p><p></p>
<p>If you watched the other messages come through here, you will have 
noticed that most (if not all) messages jumped on this JNZ. This JNZ 
points to the default case of the switch/case statement, basically the 
call to DefWindowProcA that tells Windows to handle this message for us.
 I am going to go ahead and put a bookmark at address 4012AC called 
“Jump to Code Cave”:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/195.png"><img class="aligncenter  wp-image-1367" title="The default case" src="1347_fichiers/195.png" alt="" height="142" width="680"></a> </p><p></p>
<p>After I place a bookmark at address 401347 called “Normal Message 
Return”, I now hit F9 a couple more times and you will see the cleanup 
messages come through. These include 90, 46, 47, 281, 282,&nbsp; 
2,&nbsp; 82. The window will actually close when the 02 message comes 
through. This is the message for WM_DESTROY. The app will then 
terminate.</p>
<h2><span style="color: #0a77e1;">Starting the Patch</span></h2>
<p>Now let’s think about this. We know we need to trap the WM_CLOSE 
message with an ID of 0×10, but we need to let all of the other messages
 come through, or else the app will not respond to anything. What we’re 
going to have to do is add a compare in here somewhere that checks if 
EBX is equal to 0×10, and if it is we perform our own code. If it isn’t,
 we just pass the message on like normal. This can be accomplished by 
both a code cave or injected DLL, but in this case, as there is plenty 
of extra bytes, we will use a code cave. I think in the next tutorial we
 will do this same thing but use a DLL instead, that way we can compare 
the two <img src="1347_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> .</p>
<p>So in effect, we need to make the JNZ instruction at address 4012AC 
jump to our own code. In our code we will first compare EBX with 0×10. 
If it is <span style="text-decoration: underline;"><strong>not</strong></span>
 0×10, we will jump to the place the JNZ would have originally jumped, 
letting the message follow the normal flow it would have. If it <span style="text-decoration: underline;"><strong>is</strong></span> equal to 0×10, we will send it to our own processing, where we can do whatever we want.</p>
<p>First we need to talk about ….</p>
<h2><span style="color: #0a77e1;">Creating A Code Cave</span></h2>
<p>This app is pretty easy to find a suitable code cave; just scroll 
down toward the end of the section till we see a bunch of zeroes:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/205.png"><img class="aligncenter size-full wp-image-1370" title="Our code cave" src="1347_fichiers/205.png" alt="" height="399" width="366"></a> </p><p></p>
<p>So our code cave can start at address 403DBC. I will place a bookmark
 at the first zero at address 403DBC. My bookmarks window now looks like
 this:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/273.png"><img class="aligncenter size-full wp-image-1380" title="My bookmarks" src="1347_fichiers/273.png" alt="" height="186" width="286"></a> </p><p></p>
<p>This will help when I start jumping around <img src="1347_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> . Let’s go ahead and start coding our cave. The first thing I want to do is copy EAX to ECX so I can modify it:</p>
<p><strong>MOV ECX, EAX</strong></p>
<p>I then want to clear everything but the lowest byte so that I can make ECX equal to the message ID only:</p>
<p><strong>AND ECX, 0FF</strong></p>
<p>When typing the’FF’ I must put the zero in front of it as Olly 
doesn’t like when you enter hex values that start with a letter without 
the initial zero. What this statement does is clears everything in ECX 
except the lowest byte to zero. So if EAX was FFFFEF10, meaning that AX 
held the ID of the WM_CLOSE message, ECX would equal FFFFFF10, and after
 the AND statement ECX would equal 00000010. Now I want to compare this 
ID with 0×10:</p>
<p><strong>CMP ECX, 10</strong></p>
<p>and if it’s not 10, we just want to jump where we&nbsp; would have 
initially jumped. Looking up at address 4012AC, we can see that we would
 have jumped to 401347. This is the beginning of the DefWindowProcA 
procedure. So add this jump:</p>
<p><strong>JNZ 401347</strong></p>
<p>So now every message that is not WM_CLOSE will go through normally, 
while the WM_CLOSE message will fall through into whatever we do next. 
Let’s not do anything crazy yet, just to see if our code works. We’ll 
just put a jump to the end of the DefWindowProcA routine to make sure 
our cave works. This will basically make the close button do nothing if 
we click the ‘X’ in the title bar. The address we want to jump to is 
401359. This jumps to right after the call to DefWindowProcA. Here’s 
what our cave should look like after entering the instructions:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/229.png"><img class="aligncenter size-full wp-image-1374" title="Beginning of code cave" src="1347_fichiers/229.png" alt="" height="215" width="603"></a> </p><p></p>
<p>And we need to go up and change the JNZ to automatically jump to our 
code cave at address 4012AC. Just double-click on the bookmark “Jump to 
Code Cave” and we should land here:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/235.png"><img class="aligncenter size-full wp-image-1381" title="The jump to patch" src="1347_fichiers/235.png" alt="" height="146" width="625"></a> </p><p></p>
<p>Patching this jump to always jump to our code cave:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/282.png"><img class="aligncenter size-full wp-image-1382" title="Adding the patch to the code cave" src="1347_fichiers/282.png" alt="" height="255" width="563"></a> </p><p></p>
<p>Gives us our new patch:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/292.png"><img class="aligncenter size-full wp-image-1383" title="Gives us this" src="1347_fichiers/292.png" alt="" height="182" width="583"></a> </p><p></p>
<p>which jumps to our code cave:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/263.png"><img class="aligncenter size-full wp-image-1378" title="Jumps to the code cave" src="1347_fichiers/263.png" alt="" height="209" width="510"></a> </p><p></p>
<h2><span style="color: #0a77e1;">Trying Out The First Patch</span></h2>
<p>Let’s go ahead and try it. First, place a BP on our patched jump to 
the code cave at address 4012AC and run the app. If you need to re-start
 the app first make sure you re-activate the patches:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/3110.png"><img class="aligncenter size-full wp-image-1385" title="Breaking at the beginning" src="1347_fichiers/3110.png" alt="" height="200" width="543"></a> </p><p></p>
<p>and we can see that EBX contains the first message, in this case it 
is 0×24, or WM_GETMINMAXINFO. Let’s single step past the jump and we 
arrive at the first instruction of our code cave:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/332.png"><img class="aligncenter size-full wp-image-1387" title="into the cave" src="1347_fichiers/332.png" alt="" height="123" width="437"></a> </p><p></p>
<p>Single step a couple more times and you will notice that, since this 
message is not 0×10, we will simply jump back to where we originally 
would have jumped to, namely the DefWindowProcA procedure. Now let’s 
test the close message. Remove the BP and run the app. Now place the BP 
back on at address 4012AC and do like you did before, quickly click the 
close button in the HexCalc app. Olly will break as usual:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/342.png"><img class="aligncenter size-full wp-image-1388" title="We break again" src="1347_fichiers/342.png" alt="" height="164" width="588"></a> </p><p></p>
<p>Now, we must hit F9 several times, watching the EBX register. When 
EBX equals 0×10, we then single step into our code cave. When we get to 
address x we can see that we are not taking the jump and instead falling
 through to the next line:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/352.png"><img class="aligncenter size-full wp-image-1389" title="We dont jump" src="1347_fichiers/352.png" alt="" height="96" width="490"></a> </p><p></p>
<p>Instead, we will jump back, but this time it will be after the call to DefWindoProcA:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/362.png"><img class="aligncenter size-full wp-image-1390" title="Skipping DefWindowProcA" src="1347_fichiers/362.png" alt="" height="175" width="625"></a> </p><p></p>
<p>Now remove the BP at 4012AC and hit F9 and see what happens…Nothing! 
The window did not close. Go ahead and try and close the window- it 
won’t close. So our patch and cave work. Before we do anything else, 
let’s save the changes. Right-click and choose “Copy to executable”. 
Select All modifications. Right-click in this new window and select 
“Save file”. I saved it as HexCalc2.exe. Now load this new file into 
Olly and we can do the second part of the patch.</p>
<h2><span style="color: #0a77e1;">Patching the Second Part</span></h2>
<p>Now we want to do the fun stuff. Let’s make it so that every time the
 user clicks the close button, we display a different message in a 
message box. After a certain amount of messages, we will finally let the
 app finish. Here we can see our new code cave in Olly (after it has 
been saved to another file and re-opened):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/230.png"><img class="aligncenter size-full wp-image-1392" title="New code cave." src="1347_fichiers/230.png" alt="" height="208" width="606"></a> </p><p></p>
<p>In order to accomplish this, what we will do is designate one of 
these addresses as a counter. Because this memory is set to zero by 
default, we do not need to worry about setting it the first time 
through; it will start as zero. We will create a set of if/then 
statements, comparing this memory location’s contents with a number, and
 depending on the number, that will be the message we display. Then, we 
will increment this counter so that the next time through it will select
 the next message. If the counter reaches a certain number, we will then
 simply call the correct address, the DefWindowProcA, allowing the app 
to close. This is not the most efficient way of doing this, but it is 
easily explainiable. So here is what the code will basically look like:</p>
<p><strong>PUSH the style for Message box</strong><br>
<strong>PUSH the address of the title of the message box</strong><br>
<strong>if( counter == 0 )</strong><br>
<strong>&nbsp; PUSH address of first message’s text</strong><br>
<strong>elseif (counter == 1 )</strong><br>
<strong>&nbsp; PUSH the address of the 2nd message’s text</strong><br>
<strong>elseif (counter == 2 )</strong><br>
<strong>&nbsp; PUSH the address of the 3rd message’s text</strong><br>
<strong>…</strong><br>
<strong>else</strong><br>
<strong>&nbsp; jump to DefWindowProcA (fixing the stack before we jump) as we want to close the app now</strong></p>
<p><strong>PUSH the handle to the message&nbsp; box (null)</strong><br>
<strong>call MessageBoxA</strong><br>
<strong>increment counter</strong><br>
<strong>jump to after the DefWindowProcA call to continue</strong> <strong>so the app doesn’t close</strong></p>
<p>What this does is first pushes two of the four arguments onto the 
stack that we will need, the style and the title (you can use the 
MessageBoxA call at address 401083 for reference on the arguments and 
the address of the call). It then goes through selecting a message to 
display based on the value of our counter. If we have reached the end, 
meaning we’re not going to show any more messages and just quit instead,
 we need to remove those two argument we pushed to make the stack 
correct and then we jump out of this section of code. If instead one of 
the messages is displayed, we push the address of the text for this 
message (the third argument) and finally push the fourth argument, the 
handle to the window, which in this case we will just make null as it 
does not have to have a parent. Lastly, we call MessageBoxA, increment 
our counter for next time through, and jump back to the main code.</p>
<p>Here is the code assembled into the code cave (but before it is saved):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/612.png"><img class="aligncenter size-full wp-image-1439" title="The patched code" src="1347_fichiers/612.png" alt="" height="770" width="675"></a> </p><p></p>
<p>There are a couple things to note here. The first is that the 
messages don’t look anything like text. That’s because Olly does not 
know that they are ASCII strings yet. I simply highlighted a bunch of 
this memory, chose “Binary”-&gt;”edit” and started typing in the ASCII 
section. When you run the app and it pushes the address onto the stack, 
you will see the ASCII text representation, but until then, it will look
 like gibberish. Also, after you save it and reload it, you will see 
that it looks correct then because Olly will know that they are text.</p>
<p>Second, I added some padding between the main program and the text 
messages- this is just in case I screw up I can add an instruction 
later. I just put them in as NOPs starting at address 403E1C. I always 
do this (if there’s room).</p>
<p>Third, you may wonder where I got the address for the counter 
(405FE0) and why I didn’t just use an address in the code cave. The 
reason is the code cave is part of the code and it’s attributes are set 
as executable, not writable. Therefore, I had to find a section of the 
binary that had writable access. Opening the memory modules window we 
can see where the other global variables are kept (almost always in the 
,data section):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1116.png"><img class="aligncenter size-full wp-image-1440" title="The resource section" src="1347_fichiers/1116.png" alt="" height="205" width="519"></a> </p><p></p>
<p>and we can see that data is stored starting at location 405000. I 
then scrolled down to the end of this section and just chose a blank 
location, 405FE0 in this case.</p>
<p>Now when we run the app, our counter at address 405FE0 will be zero, 
so we will display message #0. We will then increment this counter and 
return back to the main loop. Each time through, the counter will be one
 more so we will show the next message. When the counter reaches 3, we 
will instead pop the two arguments we pushed onto the stack and return 
to let windows end the app. Here’s what the message boxes look like each
 time you press the close button:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/812.png"><img class="aligncenter size-full wp-image-1441" title="MessageBox1" src="1347_fichiers/812.png" alt="" height="307" width="364"></a> </p><p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/912.png"><img class="aligncenter size-full wp-image-1442" title="MessageBox2" src="1347_fichiers/912.png" alt="" height="342" width="411"></a> </p><p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/07/1012.png"><img class="aligncenter size-full wp-image-1443" title="MessageBox3" src="1347_fichiers/1012.png" alt="" height="361" width="521"></a> </p><p></p>
<p>and on the last close the app will actually close. Of course, if 
you’re evil, you could simply reset the counter after 3 and show the 
same messages over and over again. The only way to shut the app would be
 to open the task manager and kill the process <img src="1347_fichiers/icon_smile.gif" alt=":)" class="wp-smiley">
 . Or you could put in a lot more messages and have a random message 
shown only once every time the user quits. Really, the sky’s the limit.</p>
<p>-Now go have some fun.</p>
<p>R4ndom</p>
</div>
          	<div class="clr"></div>
          	<span class="linkpages"></span><div class="cleared"></div>
          	
			            
				<div class="roundcornrrbox">
                   	<div class="topleftcorner"><div class="toprightcorner"></div></div>
                    <div class="roubcornrcontent">
            			<span class="posttags-single">No tags</span>
                    	<div class="clr"></div>
                    </div>
                    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
                </div>                        
                        
			
			        	
            <div class="clr"></div>
        </div> <!-- Closes topPost -->
		<small></small>

		<div id="comments">
			            <!-- WP 2.7 and above -->
            <div class="roundcornrrbox">
	<div class="topleftcorner"><div class="toprightcorner"></div></div>
	<div class="roubcornrcontent">

		<h3 id="commentstitle">7 Comments for this entry</h3>
	<ul class="commentlist">
		   <li class="comment even thread-even depth-1" id="li-comment-2171">
     <div id="comment-2171">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="1347_fichiers/f44a5bd6f5827efc755b46ea45bc2fb7.jpg" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://ge0-bidouille.blogspot.com/" rel="external nofollow" class="url">Ge0</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2171" title="">August 2nd, 2012 on 4:45 pm</a>  </small>

			<p>Hi R4ndom,</p>
<p>this is a great article,</p>
<p>this make me feel like finishing a little tool that let you to append
 a section on a PE file and even adding some additional null-bytes. 
Would you be interested in?</p>
<p>Cheers.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2171#respond" onclick='return addComment.moveForm("comment-2171", "2171", "respond", "1347")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-2187">
     <div id="comment-2187">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="1347_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2187" title="">August 2nd, 2012 on 7:44 pm</a>  </small>

			<p>YES!!!!!!<br>
I was thinking of doing the same thing but I just don’t have the time. I
 would also post an article on it on the blog and make it available for 
download.</p>
<p>Please let me know.</p>
<p>R4ndom</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2187#respond" onclick='return addComment.moveForm("comment-2187", "2187", "respond", "1347")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment even depth-3" id="li-comment-2203">
     <div id="comment-2203">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="1347_fichiers/f44a5bd6f5827efc755b46ea45bc2fb7.jpg" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://ge0-it.blogspot.co.uk/" rel="external nofollow" class="url">Ge0</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2203" title="">August 2nd, 2012 on 10:32 pm</a>  </small>

			<p>Hello again R4ndom,</p>
<p>you can find the whole progress of that stuff in there: <a href="http://ge0-it.blogspot.co.uk/" rel="nofollow">http://ge0-it.blogspot.co.uk/</a> </p><p></p>
<p>I added your blog on my list. Do you have any twitter account?</p>
<p>Cheers!</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2203#respond" onclick='return addComment.moveForm("comment-2203", "2203", "respond", "1347")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
</ul>
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2220">
     <div id="comment-2220">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="1347_fichiers/140038f170eb1973d9c1145e68ff8ee8.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>MajorPayne</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2220" title="">August 3rd, 2012 on 9:15 am</a>  </small>

			<p>Hola,</p>
<p>what kinda bookmark plugin version is that. I cannot name the bookmarks with my version.<br>
Thanks.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2220#respond" onclick='return addComment.moveForm("comment-2220", "2220", "respond", "1347")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2224">
     <div id="comment-2224">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="1347_fichiers/140038f170eb1973d9c1145e68ff8ee8.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>MajorPayne</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2224" title="">August 3rd, 2012 on 10:34 am</a>  </small>

			<p>Never mind – got it.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2224#respond" onclick='return addComment.moveForm("comment-2224", "2224", "respond", "1347")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-2256">
     <div id="comment-2256">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="1347_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2256" title="">August 3rd, 2012 on 4:39 pm</a>  </small>

			<p>V2</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2256#respond" onclick='return addComment.moveForm("comment-2256", "2256", "respond", "1347")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment even depth-3" id="li-comment-2332">
     <div id="comment-2332">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="1347_fichiers/f44a5bd6f5827efc755b46ea45bc2fb7.jpg" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite><a href="http://ge0-it.blogspot.co.uk/" rel="external nofollow" class="url">Ge0</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2332" title="">August 4th, 2012 on 11:33 pm</a>  </small>

			<p>Yop R4ndom,</p>
<p>Please check <a href="http://ge0-it.blogspot.co.uk/2012/08/adding-section-to-your-pe-easy-way.html" rel="nofollow">http://ge0-it.blogspot.co.uk/2012/08/adding-section-to-your-pe-easy-way.html</a> </p> it might help you…<p></p>
<p>Cheers</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347?replytocom=2332#respond" onclick='return addComment.moveForm("comment-2332", "2332", "respond", "1347")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
</ul>
</li>
	</ul>
	
	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="cleared"></div>
	</div>

		<h3>1 Trackback or Pingback for this entry</h3>
	<ul class="trackback">
		     <li class="pingback even thread-even depth-1" id="li-comment-2330">
     <div id="comment-2330">
			<div class="commentbody">
			<cite><a href="http://cyberoperations.wordpress.com/2012/08/04/security-news-0x1a/" rel="external nofollow" class="url">Security News #0x1A « CyberOperations</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2330" title="">August 4th, 2012 on 11:20 pm</a>  </small>

			<p>[...] And here is a nice post for budding reverse engineers by R4ndom showing how to patch and modify a binary. [...]</p>
			</div>
     </div>
</li>
	</ul>
	

 
<div class="clr"></div>
<div id="respond">
<h3>Leave a Reply</h3>
<div id="cancel-comment-reply">
	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://thelegendofrandom.com/blog/archives/1347#respond" style="display:none;">Click here to cancel reply.</a> </small>
</div>
 
<form action="http://thelegendofrandom.com/blog/wp-comments-post.php" method="post" id="commentform">


<p><input name="author" id="author" size="22" tabindex="1" type="text">
<label for="author"><small>Name </small></label></p>
<p><input name="email" id="email" size="22" tabindex="2" type="text">
<label for="email"><small>Mail (will not be published) </small></label></p>
<p><input name="url" id="url" size="22" tabindex="3" type="text">
<label for="url"><small>Website</small></label></p>

 <input name="comment_post_ID" value="1347" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">

<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->
<p><textarea name="comment" id="comment" cols="56" rows="10" tabindex="4"></textarea></p>
<p><input name="submit" id="submit" class="submitbutton" tabindex="5" value="Leave comment" type="submit">
<input name="comment_post_ID" value="1347" type="hidden">
</p>

<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="6c7f73f3d1" type="hidden"></p> 
</form>
</div>
 
    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>            
                    </div> <!-- Closes Comment -->

<div id="extrastuff">
<span id="rssleft"><a href="http://thelegendofrandom.com/blog/archives/1347/feed"><abbr title="Really Simple Syndication">RSS</abbr> feed for this post (comments)</a> </span>

<span id="trackright"> · <a href="http://thelegendofrandom.com/blog/archives/1347/trackback" rel="trackback">TrackBack <abbr title="Uniform Resource Identifier">URI</abbr></a> </span>
<div class="cleared"></div>
</div>


</div><!-- Closes Main -->


<div id="rightcol">
	<div class="roundcornrrbox">
    <div class="topleftcorner"><div class="toprightcorner"></div></div>
    <div class="roundcrrcnt">
        <!-- Optional Intro -->
                
        <!-- widget -->



<h2>Login</h2>
<form action="http://thelegendofrandom.com/blog/wp-login.php" method="post">
<input name="log" id="log" size="20" type="text">
<input name="pwd" id="pwd" size="20" type="password">
<input name="submit" value="Send" class="button" type="submit">
    <p>
       <label for="rememberme"><input name="rememberme" id="rememberme" checked="checked" value="forever" type="checkbox"> Remember me</label>
       <input name="redirect_to" value="/blog/archives/1347" type="hidden">
    </p>
</form>
<a href="http://thelegendofrandom.com/blog/wp-login.php?action=lostpassword">Recover password</a> 



        		<li id="recent-posts-2" class="sidebaritem widget_recent_entries"><div class="sidebarbox">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2980" title="My Absence">My Absence</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2975" title="What Are These Strange Posts?">What Are These Strange Posts?</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2966" title="Nice Beginning Article on Reversing Android">Nice Beginning Article on Reversing Android</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2963" title="She Is 17-years-old, She Did It Publicly In High School And While Drunk">She Is 17-years-old, She Did It Publicly In High School And While Drunk</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2961" title="And The Most Posts Submitted In A Single Sitting Goes To…">And The Most Posts Submitted In A Single Sitting Goes To…</a> 
						</li>
				</ul>
		</div></li><li id="recent-comments-2" class="sidebaritem widget_recent_comments"><div class="sidebarbox"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/1722#comment-85953">A New Tutorial by Xor06 : Bypassing a Server Check</a> </li><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/2418#comment-85946">R4ndom’s Tutorial #23: TLS Callbacks</a> </li><li class="recentcomments">C4lculated on <a href="http://thelegendofrandom.com/blog/archives/1472#comment-85945">R4ndom’s Tutorial #17: Working With Delphi Binaries</a> </li><li class="recentcomments"><a href="http://rce-loverz.tk/" rel="external nofollow" class="url">X-Programmer</a>  on <a href="http://thelegendofrandom.com/blog/archives/7#comment-85935">Tutorial #1 : What is Reverse Engineering</a> </li><li class="recentcomments">shub on <a href="http://thelegendofrandom.com/blog/archives/859#comment-85873">R4ndom’s Tutorial #9: Solution</a> </li></ul></div></li><li id="archives-2" class="sidebaritem widget_archive"><div class="sidebarbox"><h2 class="widgettitle">Archives</h2>		<ul>
			<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/05" title="May 2012">May 2012</a> </li>
		</ul>
</div></li><li id="categories-2" class="sidebaritem widget_categories"><div class="sidebarbox"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-23"><a href="http://thelegendofrandom.com/blog/archives/category/beginner" title="View all posts filed under Beginner">Beginner</a> 
</li>
	<li class="cat-item cat-item-31"><a href="http://thelegendofrandom.com/blog/archives/category/challenges" title="View all posts filed under Challenges">Challenges</a> 
</li>
	<li class="cat-item cat-item-24"><a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts filed under Intermediate">Intermediate</a> 
</li>
	<li class="cat-item cat-item-32"><a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts filed under Modifying Binaries">Modifying Binaries</a> 
</li>
	<li class="cat-item cat-item-25"><a href="http://thelegendofrandom.com/blog/archives/category/randoms-ramblings" title="View all posts filed under Random's Ramblings">Random's Ramblings</a> 
</li>
	<li class="cat-item cat-item-3"><a href="http://thelegendofrandom.com/blog/archives/category/reverse-engineering" title="View all posts filed under Reverse Engineering">Reverse Engineering</a> 
</li>
	<li class="cat-item cat-item-4"><a href="http://thelegendofrandom.com/blog/archives/category/tools" title="View all posts filed under Tools">Tools</a> 
</li>
	<li class="cat-item cat-item-5"><a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts filed under Tutorials">Tutorials</a> 
</li>
	<li class="cat-item cat-item-1"><a href="http://thelegendofrandom.com/blog/archives/category/uncategorized" title="View all posts filed under Uncategorized">Uncategorized</a> 
</li>
		</ul>
</div></li><li id="meta-2" class="sidebaritem widget_meta"><div class="sidebarbox"><h2 class="widgettitle">Meta</h2>			<ul>
			<li><a href="http://thelegendofrandom.com/blog/wp-login.php?action=register">Register</a> </li>			<li><a href="http://thelegendofrandom.com/blog/wp-login.php">Log in</a> </li>
			<li><a href="http://thelegendofrandom.com/blog/feed" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a> </li>
						<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a> </li>
						</ul>
</div></li><li id="ajax-quick-subscribe" class="sidebaritem widget_quick_subscribe"><div class="sidebarbox"><h2 class="widgettitle">Subscribe</h2>Enter your email to subscribe to future updates<div id="QSWidgetDiv" class="QSWidgetDiv"><form name="widget_quick_subscribe_form" id="widget_quick_subscribe_form"><input name="QS_user_email_widget" id="QS_user_email_widget" placeholder="email@email.com" onfocus='fadeSubmitIn("widget_qsSubmit");' onblur='fadeSubmitOut(this, "widget_qsSubmit");' onkeypress='return checkForEnter(event, "QS_user_email_widget", "QSWidgetDiv"); return false;' type="email"><input style="display:none;" value="subscribe!" id="widget_qsSubmit" class="widget_qsSubmit" onclick='submitQuickSubscribe("QS_user_email_widget", "QSWidgetDiv");' type="button"></form></div>			
			</div></li> 

        <div class="clr"></div>

    	<div id="feedbox">
            <div id="contrssbox">
                <a href="http://thelegendofrandom.com/blog/feed">RSS Feed</a> 
            </div>
        </div>
        


    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>
</div>
<div class="clr"></div>




    
	<div id="bottompanel">
    <div class="roundcornrrbox">
        <div class="topleftcorner"><div class="toprightcorner"></div></div>
        <div class="roundcrrcnt">
        
        	
            <div class="col1">
                
					                    <h3>Recent Posts</h3>
                    <ul>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2980">My Absence </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2975">What Are These Strange Posts? </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2966">Nice Beginning Article on Reversing Android </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2963">She Is 17-years-old, She Did It Publicly In High School And While Drunk </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2961">And The Most Posts Submitted In A Single Sitting Goes To… </a> 
                            </li>
                        			
                    </ul>
                    

                            </div>
            
            <div class="col2">
                      
                    <h3>Archives</h3>
                    <ul>
                        	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
                    </ul>

                            </div>
            
            <div class="col3">
                                    <h3>Tags</h3>
                    <ul>
                    	<a href="http://thelegendofrandom.com/blog/archives/tag/adding-functionality" class="tag-link-29" title="1 topic" style="font-size: 8pt;">adding functionality</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/assembly-language" class="tag-link-18" title="1 topic" style="font-size: 8pt;">assembly language</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/binary" class="tag-link-26" title="1 topic" style="font-size: 8pt;">binary</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-cave" class="tag-link-27" title="1 topic" style="font-size: 8pt;">code cave</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-caves" class="tag-link-30" title="1 topic" style="font-size: 8pt;">code caves</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/cracking" class="tag-link-8" title="5 topics" style="font-size: 16pt;">cracking</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/crackme" class="tag-link-17" title="1 topic" style="font-size: 8pt;">crackme</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ebook" class="tag-link-19" title="1 topic" style="font-size: 8pt;">ebook</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/exploting-binaries" class="tag-link-28" title="1 topic" style="font-size: 8pt;">exploting binaries</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/guide" class="tag-link-15" title="1 topic" style="font-size: 8pt;">Guide</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly" class="tag-link-14" title="2 topics" style="font-size: 11pt;">Olly</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ollydbg" class="tag-link-10" title="4 topics" style="font-size: 14.666666666667pt;">ollydbg</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly-tutorial" class="tag-link-9" title="1 topic" style="font-size: 8pt;">olly tutorial</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/plugins" class="tag-link-11" title="1 topic" style="font-size: 8pt;">plugins</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/reverse-engineering-2" class="tag-link-7" title="3 topics" style="font-size: 13pt;">reverse engineering</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/sandbox" class="tag-link-13" title="1 topic" style="font-size: 8pt;">sandbox</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tools" class="tag-link-4" title="1 topic" style="font-size: 8pt;">Tools</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tutorial" class="tag-link-16" title="2 topics" style="font-size: 11pt;">tutorial</a>                     </ul>
                    
                            </div>
            <div class="clr"></div>
        

            <div class="clr"></div>
        </div>
        <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
    </div>
</div>
<!-- Bottom Panel ends -->


	
    <div class="copyr">Copyright © 1996-2010 The Legend Of Random. All rights reserved.</div>    
    <div class="clr16"></div>
	</div>
    <div id="layoutbottom"></div>
</div>

<div id="credit" align="center">
	<abbr title="Jarrah/1.7">Jarrah</abbr> theme by <a href="http://www.templatesnext.org/">Templates Next</a>  
    | Powered by <a href="http://wordpress.org/">WordPress</a>  
</div>

<canvas style="display: none;" height="35" width="35"></canvas>


</body></html>