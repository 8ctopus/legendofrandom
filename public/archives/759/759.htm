<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Modifying Binaries: Adding a Menu Item «  The Legend Of Random</title>
<meta name="generator" content="WordPress 3.5.1">
<meta name="robots" content="follow, all">

<link rel="shortcut icon" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/favicon.ico">
<link rel="stylesheet" href="759_fichiers/style.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="The Legend Of Random RSS Feed" href="http://thelegendofrandom.com/blog/feed">
<link rel="pingback" href="http://thelegendofrandom.com/blog/xmlrpc.php">
<link rel="stylesheet" href="759_fichiers/menu.css" type="text/css" media="screen">
<!--[if IE]><link rel="stylesheet" href="http://thelegendofrandom.com/blog/wp-content/themes/jarrah/css/ie.css" type="text/css" media="screen" /><![endif]-->

<link rel="alternate" type="application/rss+xml" title="The Legend Of Random » Modifying Binaries: Adding a Menu Item Comments Feed" href="http://thelegendofrandom.com/blog/archives/759/feed">
<script type="text/javascript" src="759_fichiers/jquery.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var MyAjax = {"ajaxurl":"http:\/\/thelegendofrandom.com\/blog\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="759_fichiers/ajax.js"></script>
<script type="text/javascript" src="759_fichiers/comment-reply.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://thelegendofrandom.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://thelegendofrandom.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="Tutorial #8: Frame Of Reference" href="http://thelegendofrandom.com/blog/archives/506">
<link rel="next" title="R4ndom’s Tutorial #9: No Strings Attached" href="http://thelegendofrandom.com/blog/archives/654">
<meta name="generator" content="WordPress 3.5.1">
<link rel="canonical" href="http://thelegendofrandom.com/blog/archives/759">
<link rel="shortlink" href="http://thelegendofrandom.com/blog/?p=759">
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css" id="syntaxhighlighteranchor"></style>

<script type="text/javascript" src="759_fichiers/jquery_003.js"></script>
<script type="text/javascript" src="759_fichiers/jquery_002.js"></script>
<script type="text/javascript" src="759_fichiers/jquery_004.js"></script>
<script type="text/javascript" src="759_fichiers/my-menu.js"></script>

<!-- this product is released under General Public License. Please see the attached file for details. You can also find details about the license at http://www.opensource.org/licenses/gpl-license.php -->
<script type="text/javascript">
/* <![CDATA[ */

jQuery(document).ready(function(){ 
    jQuery(document).pngFix(); 
});

/* ]]> */ 
</script>

</head>

<body>

<div id="wrapper" align="center">
	<div id="layouttop"></div>
    
    <!-- Header Starts -->
    <div id="header">
    	<div id="headerleft">
        	              	<h1><a href="http://thelegendofrandom.com/blog">The Legend Of Random</a> </h1><h3>Programming and Reverse Engineering</h3>
			      	   
        </div>
        <div id="headerright">
        	<div id="searchboxo">
        		<form method="get" id="searchform" action="http://thelegendofrandom.com/blog/">
    <input value="Search keywords" name="s" id="searchbox" onfocus="this.value=''" class="searchinput" type="text">
    <input class="submitbutton" value="" type="submit">
</form> 
            </div>
        </div>
    </div>
    <!-- Header Ends -->

    
    
    <div id="innerwrapper">
    	
        <!-- Main nav Starts here -->
        <div id="navouter">
            <div id="nav">

                                <ul class="lavalamp" id="menu1">
                <li class="page_item "><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/index.html">Home</a> </li>
                <li class="page_item page-item-2"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/sample-page.html">Tutorials</a> </li>
<li class="page_item page-item-27"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/tools.html">Tools</a> </li>
<li class="page_item page-item-153"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/contact-2.html">Contact</a> </li>
<li class="page_item page-item-846"><a href="http://www.thelegendofrandom.com/forum/">Forum</a> </li>
<li class="page_item page-item-1790"><a href="file:///Y:/thelegendofrandom.com/site/thelegendofrandom.com/blog/challenges.html">Challenges</a> </li>
			
                <li style="left: 12px; width: 58px;" class="back"><div class="left"></div></li></ul>
            
            </div>
        </div>
        <!-- Main nav Ends -->
<div id="maincol">
		
        <div class="postwrap">
          	<h2 class="posttitle"><a href="http://thelegendofrandom.com/blog/archives/759">Modifying Binaries: Adding a Menu Item</a> </h2>
          	<div class="postmeta">by <a href="http://thelegendofrandom.com/blog/archives/author/random" title="Posts by R4ndom" rel="author">R4ndom</a>  on Jun.21, 2012, under <a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts in Intermediate" rel="category tag">Intermediate</a> , <a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts in Modifying Binaries" rel="category tag">Modifying Binaries</a> , <a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts in Tutorials" rel="category tag">Tutorials</a> </div>
            <div class="clr16"></div>
          	<div class="postcontent"><h2><span style="color: #0a77e1;">Introduction</span></h2>
<p>In this tutorial we are going to be adding a menu item to a binary. 
There are many uses for adding a menu item to an existing binary. 
Perhaps you find yourself typing the same phrase over and over – it may 
be a lot easier just to make it a menu item that when selected, pasted 
that phrase into your app. Maybe you would like to add a little sunshine
 to a co-workers day by adding a “UNDO” menu item, that instead deletes 
the file, reminding him or her of the importance of not taking the undo 
button for granted. There are many reasons for adding a menu item, but 
most of all, it’s just interesting how it works <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p><span id="more-759"></span></p>
<p>Our target will be a simple app I made for my regular reverse 
engineering tutorials called Simple Editor. It doesn’t do much, but it 
helps showing how this is done on a simple app so you don’t get bogged 
down in superfluous code. Go ahead and run the app:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/117.png"><img class="aligncenter size-full wp-image-760" title="Start the app" src="759_fichiers/117.png" alt="" height="340" width="424"></a> </p><p></p>
<p>You can see that there’s not much to it (and I’m pretty sure the 
toolbar buttons are wrong, but it doesn’t matter for this tutorial. 
Trust me, I’ll fix it before the ‘Adding Toolbar Buttons tutorial <img src="759_fichiers/icon_biggrin.gif" alt=":D" class="wp-smiley">  )The Simple Editor basically allows you to do three things. One is to repeat what you typed in a message box:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/218.png"><img class="aligncenter size-full wp-image-761" title="Show text" src="759_fichiers/218.png" alt="" height="337" width="424"></a> </p><p></p>
<p>The other two things are clear the text window and exit:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/310.png"><img class="aligncenter size-full wp-image-762" title="Original menu options" src="759_fichiers/310.png" alt="" height="340" width="424"></a> </p><p></p>
<p>So what we are going to do is add a menu item to this app called 
“Shout Out!!!” that will insert a helpful message into the text area.</p>
<h2><span style="color: #0a77e1;">Adding The Resource</span></h2>
<p>First, load the Simple Editor into Resource Hacker (Resource Hacker can be downloaded from my <span style="text-decoration: underline; color: #0a77e1;"><a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="color: #0a77e1; text-decoration: underline;">tools</span></a> </span></p> page) and you will see the three resources it has found in our program:<p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/410.png"><img class="aligncenter size-full wp-image-763" title="Start Resource Hacker" src="759_fichiers/410.png" alt="" height="452" width="552"></a> </p><p></p>
<p>Resource Hacker has found a Bitmap (the toolbar), the menu, and a 
dialog box, which is our main app’s window. Go ahead and open the menu 
folder, open the “Mymenu” folder and click on the 1033 with the pretty 
flower next to it:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/510.png"><img class="aligncenter size-full wp-image-764" title="Viewing menu in Resource Hacker" src="759_fichiers/510.png" alt="" height="560" width="945"></a> </p><p></p>
<p>As you can see, this opens the various characteristics of the menu in
 our app as well as a sample window showing the menu below. If you click
 on the options menu in the example window, it will show you what it 
will look like:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/612.png"><img class="aligncenter size-full wp-image-766" title="Viewing original menu" src="759_fichiers/612.png" alt="" height="148" width="468"></a> </p><p></p>
<p>Now, move up to the main window and look at the menu data. Here you 
can see that the name of the menu is Mymenu, the menu is in English 
(duh), and the information about this specific menu items. First is the 
POPUP “Options” telling us that this is the title of the menu and will 
pop-up additional items. Next are three menu items, each corresponding 
to the three item that are currently in our menu. What we are going to 
do is very simple: we are going to add (copy and paste is fine) a line 
with our own menu item in it. This line must contain all of the same 
data as the other item except it should have it’s own name and a unique 
code:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/76.png"><img class="aligncenter size-full wp-image-767" title="Adding the menu option" src="759_fichiers/76.png" alt="" height="452" width="944"></a> </p><p></p>
<p>In this case, I have added an item called “SHOUT OUT!!!”. I can see 
that the codes 32000, 32001, and 32002 have been taken so I will pick 
32003. These will be VERY important later, so make sure you at least 
notice them. At the end of the line are some attributes telling the app 
we want to see it as text blah blah blah. Now, click on the “Compile 
Script” button at the top:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/85.png"><img class="aligncenter size-full wp-image-768" title="Compile the changes" src="759_fichiers/85.png" alt="" height="86" width="239"></a> </p><p></p>
<p>And now if you go to the example window and click on the Options menu, you will see our new menu item!</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/96.png"><img class="aligncenter size-full wp-image-770" title="Viewing the new menu" src="759_fichiers/96.png" alt="" height="176" width="468"></a> </p><p></p>
<p>We have altered this binary so we must save it with this new resource
 in it, so select File -&gt; Save (or Save As if you’re not the daring 
type). I saved it as SimpleEditor2, but then again, I’m not the daring 
type:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/105.png"><img class="aligncenter size-full wp-image-771" title="Saving the menu" src="759_fichiers/105.png" alt="" height="412" width="472"></a> </p><p></p>
<p>Now don’t go and think “I’ve done it! I a l33t h4k0r now!!!”. All you’ve done is added a menu <em>resource</em>
 to the binary. The binary has no idea what to actually do with it, and 
will show you this as soon as you run it and choose our menu item:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/118.png"><img class="aligncenter size-full wp-image-772" title="Open it in Olly" src="759_fichiers/118.png" alt="" height="456" width="528"></a> </p><p></p>
<p>I’ll break the suspense; it does nothing. That is because when this 
program was written, the author never took into consideration a SHOUT 
OUT!!! button so never told the program what to do if a user selected 
it. Now begins the hard part: we must tell the program what we want to 
do.</p>
<h2><span style="color: #0a77e1;">Finding The Menu Compare Instructions</span></h2>
<p>Fortunately, we are dealing with a fairly small app, and fortunately 
the ID’s that were used for the menu resources were quite unique (thank 
me later). Most of the time, the app will be far larger and the IDs will
 be 0, 1, 2 etc. The reason we are glad that these IDs are unique is 
that we can search directly for them and not hit too many false 
positives (actually, in our case, none). So remember back to those IDs 
that were in the menu section and you will remember that the first one 
was 32000. Let’s search the binary for this constant as we know 
somewhere the app will need to compare something against this ID to see 
if that was the menu option selected (and not say, the exit menu item). 
Open the app in OllyDBG (you can get this on my <span style="color: #0a77e1;"><a title="Tools" href="http://thelegendofrandom.com/blog/tools"><span style="text-decoration: underline; color: #0a77e1;">tools</span></a> </span></p> page as well), Right click in the assembly window and select “Search for” -&gt; Constant:<p></p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/124.png"><img class="aligncenter size-full wp-image-773" title="Search for constant" src="759_fichiers/124.png" alt="" height="484" width="684"></a> </p><p></p>
<p>Now, this 32000 is in decimal, so I put it into the Signed (or 
Unsigned) decimal edit box, make sure “Entire block” is selected and 
choose OK:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/135.png"><img class="aligncenter size-full wp-image-774" title="search for ID" src="759_fichiers/135.png" alt="" height="170" width="205"></a> </p><p></p>
<p>Fortunately, Olly has taken us directly to the section of code we are looking for:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/145.png"><img class="aligncenter size-full wp-image-775" title="Find the jump" src="759_fichiers/145.png" alt="" height="414" width="777"></a> </p><p></p>
<p>Notice the compare AX, 7D00? 7D00 is hex for 32000. Every Windows 
program will have something that resembles this grouping of code. Well, 
every Windows program that has a menu (and many that don’t). Sometimes 
it will not be easy to find, especially if the program was coded in 
something other than C/C++, but the more you do this the more you will 
grow to recognize this section.</p>
<p>A second option is to simply run the app, select a menu item that you
 can figure out an API call for, put a BP on every call to that API, and
 eventually you will find your way to this area.</p>
<p>This area I’m referring to is the section of code that checks which 
menu item was selected. If you look above where Olly has stopped, you 
will see that if in fact AX is equal to 32000, it will fall through to a
 GetDlgTextItem and a MessageBox. This should signal to you that this is
 the “Show text” menu option, as it grabs the text that has been types 
and shows it in a message box. You could also just remember that the 
code 32000 corresponded to the “Show text” menu item resource in 
Resource Hacker. If you look a little past that you will see that AX is 
then compared with 7D01 (32001), and if it’s equal we call the 
SetDlgItemTextA (clearing the screen), and if it’s not we compare AX 
with 32002 (7D02) which will then call the DestroyWindow API:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/154.png"><img class="aligncenter size-full wp-image-776" title="Different function checks" src="759_fichiers/154.png" alt="" height="408" width="775"></a> </p><p></p>
<p>It’s pretty easy to tell from this picture that there are three menu 
items and three sections of code corresponding to each of them. That 
seems pretty perfect, seeing as our app originally contained three menu 
items, but what if we want four? Well, that’s where the code cave comes 
in.</p>
<h2><span style="color: #0a77e1;">Finding The Code Cave</span></h2>
<p>The problem is we can’t just go adding another compare and API call 
for our new menu item in the middle of all this code. I mean, this code 
does shit- you can’t just write over it! So what we are going to have to
 do is call our own code from somewhere in this section of code, and our
 code needs to check our own menu item ID (32003) to see if it was 
selected. The problem is compounded by the fact that when we put a jump 
to our custom code, we will have to overwrite some instructions to make 
the jump, so those instructions that were overwritten will need to be 
moved to our cave as well. If you are a little hazy on code caves, 
please see my tutorial “Adding a Dialog Box” which goes over the basics 
of them.</p>
<p>Well, the first thing we need to do is find some space to put our 
code. Normally I would use the Find Code Cave script used in the 
previously mentioned tutorial, but since this app is so small, you only 
need to scroll down about a page (right past the jump table) and you’ll 
hit a bunch of empty memory:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/166.png"><img class="aligncenter size-full wp-image-778" title="Finding the cave" src="759_fichiers/166.png" alt="" height="360" width="704"></a> </p><p></p>
<p>So our code cave will start at address 4012F5 (This skips one byte of zero, but I like to have a little buffer anyway <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley">
  ) Now we need to scroll up and find out where we can make the jump to 
our code cave, a place where it will be easy to fix what we overwrite. 
Since the first check (for ‘Show Text’) is longer than the others, I’m 
gonna leave that one. That leaves either the second (for ‘Clear Text’) 
or the third (for ‘Exit’). It really doesn’t matter which of the two you
 pick, but I picked the second. As we saw earlier, this second section 
of code starts at address 401209 with the initial compare to AX, and 
ends at address 40121E, with a jump out of this section after the call 
to SetDlgItemTextA:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/175.png"><img class="aligncenter size-full wp-image-779" title="Copying the binary data" src="759_fichiers/175.png" alt="" height="130" width="777"></a> </p><p></p>
<p>Now what I’m going to do is copy this entire section of code and put 
it at the beginning of our code cave. I am taking the whole thing 
because it is not very big and that way I don’t need to worry about 
saving registers and stack state. This section of code will be 
completely contained in our code cave, along with our additional code. 
So highlight EXACTLY the lines I have highlighted in the previous 
picture, right click on it and choose “Binary” -&gt; “Binary copy”:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/185.png"><img class="aligncenter size-full wp-image-780" title="Binary copy" src="759_fichiers/185.png" alt="" height="284" width="584"></a> </p><p></p>
<p>Now scroll down to our code cave, start highlighting the line at 
address 4012F5 and highlight a large section (enough to fit the copied 
code):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/195.png"><img class="aligncenter size-full wp-image-781" title="Selecting the area to paste" src="759_fichiers/195.png" alt="" height="375" width="778"></a> </p><p></p>
<p>Now select “Binary” -&gt; “Binary paste”:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/206.png"><img class="aligncenter size-full wp-image-782" title="Pasting binary data" src="759_fichiers/206.png" alt="" height="260" width="520"></a> </p><p></p>
<p>Now you will see the copied code in our code cave:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/219.png"><img class="aligncenter size-full wp-image-783" title="The pasted data" src="759_fichiers/219.png" alt="" height="373" width="677"></a> </p><p></p>
<p>There are a couple points we need to make about this code. The first 
is that it conveniently calls the first line of empty code where our 
custom code will go if AX does not equal 7D01. This is nice <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley">  Only, it will have to be changed <img src="759_fichiers/icon_sad.gif" alt=":(" class="wp-smiley"> </p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/226.png"><img class="aligncenter size-full wp-image-784" title="Notice the jump" src="759_fichiers/226.png" alt="" height="116" width="382"></a> </p><p></p>
<p>Secondly, you need to know that the call to SetDlgItemTextA that is 
now at address 401305 is wrong. Notice it is a SHORT call, meaning it 
doesn’t call a specific address, but an address at a specific OFFSET 
from this current line. (SHORT calls must call code within FF bytes). So
 what we need to do is go back up to the original call to 
SetDlgItemTextA and find the actual address it calls, and then paste 
that address into this code. Scroll back up to the original call at 
address 401219 and hit the space bar on it to bring up the assembly 
window. This shows us the actual address instead of the API name. Copy 
this address:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/236.png"><img class="aligncenter size-full wp-image-790" title="Assemble window" src="759_fichiers/236.png" alt="" height="118" width="339"></a> </p><p></p>
<p>and now go back to our code cave and paste this correct address into the call:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/246.png"><img class="aligncenter size-full wp-image-791" title="Paste in the correct jump" src="759_fichiers/246.png" alt="" height="281" width="722"></a> </p><p></p>
<p>Notice the call changes to show a correct call to 
SetDlgItemTextA.This is why the original JNZ code that we thought was so
 nice of it to point to the right address is now wrong- we have added 
bytes. This will need to be fixed (later). We also need to fix the jump 
at the end as it uses a SHORT jump, and since we’ve moved it, the offset
 will be different. So go up to the original jump at 40121E, hit the 
space bar, copy the contents, and then paste them into this last JMP 
instruction (don’t forget to delete the SHORT word or you’ll get an 
error:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/23b.png"><img class="aligncenter size-full wp-image-805" title="Fixing the jump" src="759_fichiers/23b.png" alt="" height="256" width="730"></a> </p><p></p>
<p>Now we need to add our own custom handler of our custom menu item. We
 know that the ID is 7D03 (32003) so we start with a compare AX to this 
value:</p>
<p>CMP&nbsp; AX, 7D03</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/247.png"><img class="aligncenter size-full wp-image-806" title="Adding the compare" src="759_fichiers/247.png" alt="" height="245" width="711"></a> </p><p></p>
<p>We then need to jump to the next check if our ID does not match. To 
find this address, go back up to the beginning of the third section (the
 section for “Exit” menu item) and note what the address is of the 
beginning of it:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/267.png"><img class="aligncenter size-full wp-image-794" title="Finding original jump" src="759_fichiers/267.png" alt="" height="236" width="675"></a> </p><p></p>
<p>We can see that it is at address 401220 (and you can see that the prior section jumps to here from the red arrow <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> ). So we need to add the next line of our custom code that performs this jump if our menu item was not selected:</p>
<p>JNZ 401220</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/278.png"><img class="aligncenter size-full wp-image-807" title="Add the JNZ" src="759_fichiers/278.png" alt="" height="255" width="735"></a> </p><p></p>
<p>OK, now we need to decide what it is we want to do with our menu 
item. I have decided that every time you choose “SHOUT OUT!!!” it will 
put in a friendly message into the edit text box. Fortunately, this is 
very similar to the ‘Clear text’ code used at the beginning of our code 
cave. Let’s do a quick look at SetDlgItemTextA:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/287.png"><img class="aligncenter size-full wp-image-797" title="Help" src="759_fichiers/287.png" alt="" height="640" width="549"></a> </p><p></p>
<p>Notice the parameters; handle to window, ID of control, and a pointer
 to the text to display. If you look at the section we copied, you can 
see that they sent zero as the ptr to text (meaning none), the ID is 
0BB8, and the handle to the window is <strong>DWORD PTR SS:[EBP+8]</strong>:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/296.png"><img class="aligncenter size-full wp-image-804" title="Arguments" src="759_fichiers/296.png" alt="" height="101" width="451"></a> </p><p></p>
<p>So, we are going to do the same thing, but instead of pushing a zero 
like the first code section does (to signify no text), we are going to 
push an address of the text we want to inject <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley">
  Now, as we have not entered our text to send yet, when I first 
assemble the push with the pointer to the text, I am just going to throw
 a guess as to what address it’s going to be, then later, when I know 
the exact address, I’ll come back and replace it. This is just so that 
Olly reserves enough bytes for the jump. So lets add our next line of 
code as PUSH 401328:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/305.png"><img class="aligncenter size-full wp-image-808" title="Pushing the first arg" src="759_fichiers/305.png" alt="" height="212" width="714"></a> </p><p></p>
<p>Now, since the second and third argument, as well as the call to 
SetDlgItemTextA are the same, I will just binary copy them from address 
range 4012FD-40130A:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/316.png"><img class="aligncenter size-full wp-image-809" title="Second binary copy" src="759_fichiers/316.png" alt="" height="272" width="948"></a> </p><p></p>
<p>Then binary paste by selecting a bunch of lines (including the NOP at
 the end) and selecting “Binary” -&gt; “Binary paste” at the end of our 
custom code:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/325.png"><img class="aligncenter size-full wp-image-810" title="Second binary paste" src="759_fichiers/325.png" alt="" height="252" width="724"></a> </p><p></p>
<p>In this new section, let’s first fix the call to SetDlgItemTextA; 
highlight the call to SetDlgItemTextA above, hit space bar, copy the 
address, and paste it into the last call of our code ( you will see the 
call change to SetDlgItemTextA):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/333.png"><img class="aligncenter size-full wp-image-811" title="Fix second SetDlgItemTextA" src="759_fichiers/333.png" alt="" height="173" width="481"></a> </p><p></p>
<p><em>*ps. Ignore the ADD BYTE PTR DS:[EAX],AL instructions you see. 
This was a mistake I made when making this tutorial and I had to set the
 memory back to zeroes- and when you do this, Olly displays them in this
 way, instead of the normal DB 00. They both mean the same thing though <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </em></p>
<p>Now, the final instruction is to jump back into the original code 
after inserting our text. This jump will be the same as the jump at 
address 40130A, the same place the first section of our code jumps to 
when it’s done performing it’s functionality. In fact, it’s the same 
place that all code sections that check for a menu item clicked jump to 
when they’re done doing whatever they do. So replace the last jump with 
the address of the jump at address 40130A:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/343.png"><img class="aligncenter size-full wp-image-812" title="The final jump" src="759_fichiers/343.png" alt="" height="85" width="431"></a> </p><p></p>
<p><em>* You can ignore the NOP at the end, or you can modify it to be a zero if you’re a perfectionist <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </em></p>
<p>Now we need to put in our message. Just select an address a couple 
addresses down from your code cave (I like to leave some space in case I
 made a mistake in the cave- it gives me some room to make changes in). 
Let’s add our message at 40133A. Highlight that line and choose “Binary”
 -&gt; “Edit”. Click in the top box (for ASCII), hit delete once to get 
rid of the zero that’s already in this spot, and type your message. You 
can type any message you want, but I usually try to make mine helpful, 
so I put “Don’t feel bad- half the people in the world are below 
average.” When you click OK, your ASCII data will be saved, but Olly 
will think it’s code, so he will display it wrong. Don’t worry, it will 
show up properly soon:):</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/353.png"><img class="aligncenter size-full wp-image-813" title="Our ASCII data" src="759_fichiers/353.png" alt="" height="533" width="640"></a> </p><p></p>
<p>Now two last loose ends… Don’t forget to change the address of the 
PUSH for the pointer to our text at address 401319. Remember, this was a
 temporary address we pushed, so we need to replace our original guess 
of 401328 with the actual address of the beginning of our ASCII text, 
40133A.You’ll know it worked because the text will show up right after 
the push:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/362.png"><img class="aligncenter size-full wp-image-814" title="The text push is fixed" src="759_fichiers/362.png" alt="" height="79" width="794"></a> </p><p></p>
<p>And secondly, the first JNZ instruction at address 4012F9 is pointing
 to the wrong address (since we added bytes between this instruction and
 it’s destination). So go to that line and change the JNZ 40130C to JNZ 
40130F. We know it’s 40130F because that is the first line of the next 
section of code, comparing the clicked menu item with the next option:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/422.png"><img class="aligncenter size-full wp-image-821" title="Loose end" src="759_fichiers/422.png" alt="" height="123" width="440"></a> </p><p></p>
<p>You will also see that the grey arrow now points to the correct address- the compare at the beginning of our custom code.</p>
<p>OK, at this point I would save the changes you’ve made, seeing as 
things get a little dicey if you make a mistake and try to get back to 
this point (it’s not impossible, it’s just not fun). So highlight the 
entire section of code, from before your code cave to after your ASCII 
data, right-click and choose “Copy to executable” -&gt; “Selection”. 
Then right click on this new window and select “Save file” and save it 
as “SimpleEditor3.exe”. After you do this, load our new file into Olly 
and let’s see what he thinks of it. Scroll down to where our code cave 
is and it should look like this:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/434.png"><img class="aligncenter size-full wp-image-822" title="That's better" src="759_fichiers/434.png" alt="" height="376" width="774"></a> </p><p></p>
<p>That looks a lot better! The first thing you should notice is that 
there are now two sections: the first which is the section for the 
“Clear text” menu option, and then the second section for the “SHOUT 
OUT!!!” menu item, both of which call SetDlgItemTextA. You should also 
notice our ASCII text displayed the way it should at the bottom <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p>You may wonder would would happen if you ran the program right now. 
Well, nothing would be different than when we originally ran it; all we 
did was add a bunch of code, but that code is never called! So it’s just
 loose code in a binary that never does anything.</p>
<p>Soooooo, the last step is</p>
<h2><span style="color: #0a77e1;">Calling Our Code</span></h2>
<p>If you recall back a ways we chose the second section of the check 
menu items selected code and copied this into the beginning of our code 
cave:<br>
<a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/175.png"><img class="aligncenter size-full wp-image-779" title="Copying the binary data" src="759_fichiers/175.png" alt="" height="130" width="777"></a> </p><p></p>
<p>It is now time to make the jump to our code. Since all of this code 
has been copied to our cave, we do not need to worry about any of it, as
 long as we don’t go past the final jump at address 40121E. Fortunately,
 a normal jump is only 5 bytes, so we only need 5 bytes of this section 
of code. Keep in mind that the beginning of our code cave is at address 
4012F5 (if you look in the patched program at the code cave you may 
think it’s at address 4012F4, but don’t forget the 1 byte equal to zero 
we put before our cave!!!). Now, highlight the first line of the section
 of code we copied, hit the space bar, and add a jump to our code:</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/392.png"><img class="aligncenter size-full wp-image-818" title="Jump to our code" src="759_fichiers/392.png" alt="" height="242" width="688"></a> </p><p></p>
<p>Now go ahead and run the app. Type in some text…make sure the Show 
and Clear menu items work. And then hold your head up high, trooper, 
because today, you are a TOP NOTCH CRACKER!!!!!!</p>
<p><a href="http://thelegendofrandom.com/blog/wp-content/uploads/2012/06/442.png"><img class="aligncenter size-full wp-image-823" title="Success" src="759_fichiers/442.png" alt="" height="340" width="424"></a> </p><p></p>
<p><em>*ps. Don’t forget to save your file as you have added the patch 
to jump to our code…and if you’ve run Olly, don’t forget the patch will 
be disabled and you will need to open the Patches window and re-enable 
it <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </em></p>
<p>-Till next time</p>
<p>R4ndom</p>
</div>
          	<div class="clr"></div>
          	<span class="linkpages"></span><div class="cleared"></div>
          	
			            
				<div class="roundcornrrbox">
                   	<div class="topleftcorner"><div class="toprightcorner"></div></div>
                    <div class="roubcornrcontent">
            			<span class="posttags-single">No tags</span>
                    	<div class="clr"></div>
                    </div>
                    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
                </div>                        
                        
			
			        	
            <div class="clr"></div>
        </div> <!-- Closes topPost -->
		<small></small>

		<div id="comments">
			            <!-- WP 2.7 and above -->
            <div class="roundcornrrbox">
	<div class="topleftcorner"><div class="toprightcorner"></div></div>
	<div class="roubcornrcontent">

		<h3 id="commentstitle">5 Comments for this entry</h3>
	<ul class="commentlist">
		   <li class="comment even thread-even depth-1" id="li-comment-481">
     <div id="comment-481">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="759_fichiers/a63a8dd45c22dca154c9ea15eb435bad.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>kg</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-481" title="">June 22nd, 2012 on 7:58 am</a>  </small>

			<p>Can you add self keygen tutorial(s)?<br>
btw  tutorials are  great.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759?replytocom=481#respond" onclick='return addComment.moveForm("comment-481", "481", "respond", "759")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment byuser comment-author-random bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-556">
     <div id="comment-556">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="759_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-556" title="">June 25th, 2012 on 4:17 pm</a>  </small>

			<p>I’m working on it <img src="759_fichiers/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759?replytocom=556#respond" onclick='return addComment.moveForm("comment-556", "556", "respond", "759")'>Reply</a>       </div>
     </div>
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2021">
     <div id="comment-2021">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="759_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>vy</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2021" title="">July 31st, 2012 on 3:18 pm</a>  </small>

			<p>I’m really enjoying the tutorials but this is my favourite so far.</p>
<p>Firstly; if I was having trouble finding a specific item ID in Olly, 
couldn’t I just change the ID in ResHacker to something unique, find it 
in Olly, then note down the address and change it back?</p>
<p>Second; if I was just patching a file it would be simple to write a 
piece of ASM or C code to do the job for me, so rather than distributing
 a patched .exe (if I were to do such a thing) I could just distribute 
the patcher. But if we’re changing things in ResHacker, can this be 
automated in code?</p>
<p>Many thanks for the tutorials, </p>
<p>vy</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759?replytocom=2021#respond" onclick='return addComment.moveForm("comment-2021", "2021", "respond", "759")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment byuser comment-author-random bypostauthor odd alt depth-2" id="li-comment-2028">
     <div id="comment-2028">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="R4ndom" src="759_fichiers/R4ndom_avatar-60x60.png" class="avatar avatar-60 photo" height="60" width="60">                </a>             
            
			<cite>R4ndom</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2028" title="">July 31st, 2012 on 4:53 pm</a>  </small>

			<p>You would not be able to change the ID in resource hacker and do a
 search because the original ID of the resource is hard-coded in the 
binary, Changing the ID in resource hacker will not change the code that
 references the resource.</p>
<p>Doing this exact thing (looking up the ID in resource hacker) cannot 
be done automatically, but there are other ways you could automate this 
process. You would need some interaction, though, from the user</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759?replytocom=2028#respond" onclick='return addComment.moveForm("comment-2028", "2028", "respond", "759")'>Reply</a>       </div>
     </div>
<ul class="children">
   <li class="comment even depth-3" id="li-comment-2071">
     <div id="comment-2071">

			<div class="commentbody">
            
                <a class="gravatar">
                	<img alt="" src="759_fichiers/ad516503a11cd5ca435acc9bb6523536.png" class="avatar avatar-60 photo avatar-default" height="60" width="60">                </a>             
            
			<cite>vy</cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-2071" title="">August 1st, 2012 on 12:19 pm</a>  </small>

			<p>Ah yes, I see the issue now.</p>
			</div><div class="cleared"></div>

      <div class="reply">
         <a class="comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759?replytocom=2071#respond" onclick='return addComment.moveForm("comment-2071", "2071", "respond", "759")'>Reply</a>       </div>
     </div>
</li>
</ul>
</li>
</ul>
</li>
	</ul>
	
	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
		<div class="cleared"></div>
	</div>

		<h3>1 Trackback or Pingback for this entry</h3>
	<ul class="trackback">
		     <li class="pingback even thread-even depth-1" id="li-comment-790">
     <div id="comment-790">
			<div class="commentbody">
			<cite><a href="http://msg1len.wordpress.com/2012/07/03/modifying-binaries-adding-a-menu-item/" rel="external nofollow" class="url">Modifying Binaries: Adding a Menu Item « msg1len Official Website</a> </cite> 
						<br>
			<small class="commentmetadata"><a href="#comment-790" title="">July 3rd, 2012 on 6:09 am</a>  </small>

			<p>[...] Original Post Share this:TwitterFacebookLike this:LikeBe the first to like this. &nbsp;    Leave a comment [...]</p>
			</div>
     </div>
</li>
	</ul>
	

 
<div class="clr"></div>
<div id="respond">
<h3>Leave a Reply</h3>
<div id="cancel-comment-reply">
	<small><a rel="nofollow" id="cancel-comment-reply-link" href="http://thelegendofrandom.com/blog/archives/759#respond" style="display:none;">Click here to cancel reply.</a> </small>
</div>
 
<form action="http://thelegendofrandom.com/blog/wp-comments-post.php" method="post" id="commentform">


<p><input name="author" id="author" size="22" tabindex="1" type="text">
<label for="author"><small>Name </small></label></p>
<p><input name="email" id="email" size="22" tabindex="2" type="text">
<label for="email"><small>Mail (will not be published) </small></label></p>
<p><input name="url" id="url" size="22" tabindex="3" type="text">
<label for="url"><small>Website</small></label></p>

 <input name="comment_post_ID" value="759" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">

<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->
<p><textarea name="comment" id="comment" cols="56" rows="10" tabindex="4"></textarea></p>
<p><input name="submit" id="submit" class="submitbutton" tabindex="5" value="Leave comment" type="submit">
<input name="comment_post_ID" value="759" type="hidden">
</p>

<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="86c58e3bb7" type="hidden"></p> 
</form>
</div>
 
    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>            
                    </div> <!-- Closes Comment -->

<div id="extrastuff">
<span id="rssleft"><a href="http://thelegendofrandom.com/blog/archives/759/feed"><abbr title="Really Simple Syndication">RSS</abbr> feed for this post (comments)</a> </span>

<span id="trackright"> · <a href="http://thelegendofrandom.com/blog/archives/759/trackback" rel="trackback">TrackBack <abbr title="Uniform Resource Identifier">URI</abbr></a> </span>
<div class="cleared"></div>
</div>


</div><!-- Closes Main -->


<div id="rightcol">
	<div class="roundcornrrbox">
    <div class="topleftcorner"><div class="toprightcorner"></div></div>
    <div class="roundcrrcnt">
        <!-- Optional Intro -->
                
        <!-- widget -->



<h2>Login</h2>
<form action="http://thelegendofrandom.com/blog/wp-login.php" method="post">
<input name="log" id="log" size="20" type="text">
<input name="pwd" id="pwd" size="20" type="password">
<input name="submit" value="Send" class="button" type="submit">
    <p>
       <label for="rememberme"><input name="rememberme" id="rememberme" checked="checked" value="forever" type="checkbox"> Remember me</label>
       <input name="redirect_to" value="/blog/archives/759" type="hidden">
    </p>
</form>
<a href="http://thelegendofrandom.com/blog/wp-login.php?action=lostpassword">Recover password</a> 



        		<li id="recent-posts-2" class="sidebaritem widget_recent_entries"><div class="sidebarbox">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2980" title="My Absence">My Absence</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2975" title="What Are These Strange Posts?">What Are These Strange Posts?</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2966" title="Nice Beginning Article on Reversing Android">Nice Beginning Article on Reversing Android</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2963" title="She Is 17-years-old, She Did It Publicly In High School And While Drunk">She Is 17-years-old, She Did It Publicly In High School And While Drunk</a> 
						</li>
					<li>
				<a href="http://thelegendofrandom.com/blog/archives/2961" title="And The Most Posts Submitted In A Single Sitting Goes To…">And The Most Posts Submitted In A Single Sitting Goes To…</a> 
						</li>
				</ul>
		</div></li><li id="recent-comments-2" class="sidebaritem widget_recent_comments"><div class="sidebarbox"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/1722#comment-85953">A New Tutorial by Xor06 : Bypassing a Server Check</a> </li><li class="recentcomments">tip on <a href="http://thelegendofrandom.com/blog/archives/2418#comment-85946">R4ndom’s Tutorial #23: TLS Callbacks</a> </li><li class="recentcomments">C4lculated on <a href="http://thelegendofrandom.com/blog/archives/1472#comment-85945">R4ndom’s Tutorial #17: Working With Delphi Binaries</a> </li><li class="recentcomments"><a href="http://rce-loverz.tk/" rel="external nofollow" class="url">X-Programmer</a>  on <a href="http://thelegendofrandom.com/blog/archives/7#comment-85935">Tutorial #1 : What is Reverse Engineering</a> </li><li class="recentcomments">shub on <a href="http://thelegendofrandom.com/blog/archives/859#comment-85873">R4ndom’s Tutorial #9: Solution</a> </li></ul></div></li><li id="archives-2" class="sidebaritem widget_archive"><div class="sidebarbox"><h2 class="widgettitle">Archives</h2>		<ul>
			<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/05" title="May 2012">May 2012</a> </li>
		</ul>
</div></li><li id="categories-2" class="sidebaritem widget_categories"><div class="sidebarbox"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-23"><a href="http://thelegendofrandom.com/blog/archives/category/beginner" title="View all posts filed under Beginner">Beginner</a> 
</li>
	<li class="cat-item cat-item-31"><a href="http://thelegendofrandom.com/blog/archives/category/challenges" title="View all posts filed under Challenges">Challenges</a> 
</li>
	<li class="cat-item cat-item-24"><a href="http://thelegendofrandom.com/blog/archives/category/intermediate" title="View all posts filed under Intermediate">Intermediate</a> 
</li>
	<li class="cat-item cat-item-32"><a href="http://thelegendofrandom.com/blog/archives/category/modifying-binaries" title="View all posts filed under Modifying Binaries">Modifying Binaries</a> 
</li>
	<li class="cat-item cat-item-25"><a href="http://thelegendofrandom.com/blog/archives/category/randoms-ramblings" title="View all posts filed under Random's Ramblings">Random's Ramblings</a> 
</li>
	<li class="cat-item cat-item-3"><a href="http://thelegendofrandom.com/blog/archives/category/reverse-engineering" title="View all posts filed under Reverse Engineering">Reverse Engineering</a> 
</li>
	<li class="cat-item cat-item-4"><a href="http://thelegendofrandom.com/blog/archives/category/tools" title="View all posts filed under Tools">Tools</a> 
</li>
	<li class="cat-item cat-item-5"><a href="http://thelegendofrandom.com/blog/archives/category/tutorials" title="View all posts filed under Tutorials">Tutorials</a> 
</li>
	<li class="cat-item cat-item-1"><a href="http://thelegendofrandom.com/blog/archives/category/uncategorized" title="View all posts filed under Uncategorized">Uncategorized</a> 
</li>
		</ul>
</div></li><li id="meta-2" class="sidebaritem widget_meta"><div class="sidebarbox"><h2 class="widgettitle">Meta</h2>			<ul>
			<li><a href="http://thelegendofrandom.com/blog/wp-login.php?action=register">Register</a> </li>			<li><a href="http://thelegendofrandom.com/blog/wp-login.php">Log in</a> </li>
			<li><a href="http://thelegendofrandom.com/blog/feed" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a> </li>
			<li><a href="http://thelegendofrandom.com/blog/comments/feed" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a> </li>
			<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a> </li>
						</ul>
</div></li><li id="ajax-quick-subscribe" class="sidebaritem widget_quick_subscribe"><div class="sidebarbox"><h2 class="widgettitle">Subscribe</h2>Enter your email to subscribe to future updates<div id="QSWidgetDiv" class="QSWidgetDiv"><form name="widget_quick_subscribe_form" id="widget_quick_subscribe_form"><input name="QS_user_email_widget" id="QS_user_email_widget" placeholder="email@email.com" onfocus='fadeSubmitIn("widget_qsSubmit");' onblur='fadeSubmitOut(this, "widget_qsSubmit");' onkeypress='return checkForEnter(event, "QS_user_email_widget", "QSWidgetDiv"); return false;' type="email"><input style="display:none;" value="subscribe!" id="widget_qsSubmit" class="widget_qsSubmit" onclick='submitQuickSubscribe("QS_user_email_widget", "QSWidgetDiv");' type="button"></form></div>			
			</div></li> 

        <div class="clr"></div>

    	<div id="feedbox">
            <div id="contrssbox">
                <a href="http://thelegendofrandom.com/blog/feed">RSS Feed</a> 
            </div>
        </div>
        


    </div>
    <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
</div>
</div>
<div class="clr"></div>




    
	<div id="bottompanel">
    <div class="roundcornrrbox">
        <div class="topleftcorner"><div class="toprightcorner"></div></div>
        <div class="roundcrrcnt">
        
        	
            <div class="col1">
                
					                    <h3>Recent Posts</h3>
                    <ul>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2980">My Absence </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2975">What Are These Strange Posts? </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2966">Nice Beginning Article on Reversing Android </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2963">She Is 17-years-old, She Did It Publicly In High School And While Drunk </a> 
                            </li>
                                                    <li>
                                <a href="http://thelegendofrandom.com/blog/archives/2961">And The Most Posts Submitted In A Single Sitting Goes To… </a> 
                            </li>
                        			
                    </ul>
                    

                            </div>
            
            <div class="col2">
                      
                    <h3>Archives</h3>
                    <ul>
                        	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/10" title="October 2012">October 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/09" title="September 2012">September 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/08" title="August 2012">August 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/07" title="July 2012">July 2012</a> </li>
	<li><a href="http://thelegendofrandom.com/blog/archives/date/2012/06" title="June 2012">June 2012</a> </li>
                    </ul>

                            </div>
            
            <div class="col3">
                                    <h3>Tags</h3>
                    <ul>
                    	<a href="http://thelegendofrandom.com/blog/archives/tag/adding-functionality" class="tag-link-29" title="1 topic" style="font-size: 8pt;">adding functionality</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/assembly-language" class="tag-link-18" title="1 topic" style="font-size: 8pt;">assembly language</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/binary" class="tag-link-26" title="1 topic" style="font-size: 8pt;">binary</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-cave" class="tag-link-27" title="1 topic" style="font-size: 8pt;">code cave</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/code-caves" class="tag-link-30" title="1 topic" style="font-size: 8pt;">code caves</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/cracking" class="tag-link-8" title="5 topics" style="font-size: 16pt;">cracking</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/crackme" class="tag-link-17" title="1 topic" style="font-size: 8pt;">crackme</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ebook" class="tag-link-19" title="1 topic" style="font-size: 8pt;">ebook</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/exploting-binaries" class="tag-link-28" title="1 topic" style="font-size: 8pt;">exploting binaries</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/guide" class="tag-link-15" title="1 topic" style="font-size: 8pt;">Guide</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly" class="tag-link-14" title="2 topics" style="font-size: 11pt;">Olly</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/ollydbg" class="tag-link-10" title="4 topics" style="font-size: 14.666666666667pt;">ollydbg</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/olly-tutorial" class="tag-link-9" title="1 topic" style="font-size: 8pt;">olly tutorial</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/plugins" class="tag-link-11" title="1 topic" style="font-size: 8pt;">plugins</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/reverse-engineering-2" class="tag-link-7" title="3 topics" style="font-size: 13pt;">reverse engineering</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/sandbox" class="tag-link-13" title="1 topic" style="font-size: 8pt;">sandbox</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tools" class="tag-link-4" title="1 topic" style="font-size: 8pt;">Tools</a> 
<a href="http://thelegendofrandom.com/blog/archives/tag/tutorial" class="tag-link-16" title="2 topics" style="font-size: 11pt;">tutorial</a>                     </ul>
                    
                            </div>
            <div class="clr"></div>
        

            <div class="clr"></div>
        </div>
        <div class="bottomleftcorner"><div class="bottomrightcorner"></div></div>
    </div>
</div>
<!-- Bottom Panel ends -->


	
    <div class="copyr">Copyright © 1996-2010 The Legend Of Random. All rights reserved.</div>    
    <div class="clr16"></div>
	</div>
    <div id="layoutbottom"></div>
</div>

<div id="credit" align="center">
	<abbr title="Jarrah/1.7">Jarrah</abbr> theme by <a href="http://www.templatesnext.org/">Templates Next</a>  
    | Powered by <a href="http://wordpress.org/">WordPress</a>  
</div>

<script type="text/javascript">
/* <![CDATA[ */
var SlimStatParams = {"ajaxurl":"http:\/\/thelegendofrandom.com\/blog\/wp-admin\/admin-ajax.php","ci":"YTo0OntzOjEyOiJjb250ZW50X3R5cGUiO3M6NDoicG9zdCI7czo4OiJjYXRlZ29yeSI7czo3OiIyNCwzMiw1IjtzOjEwOiJjb250ZW50X2lkIjtpOjc1OTtzOjY6ImF1dGhvciI7czo2OiJSYW5kb20iO30=.b44d95bd7cb1c5b6743df127ee27920c"};
/* ]]> */
</script>
<script type="text/javascript" src="759_fichiers/wp-slimstat.js"></script><canvas style="display: none;" height="35" width="35"></canvas>


</body></html>